{"version":3,"sources":["services/serviceWorker.ts","pages/Home.tsx","components/atoms/Links/styles/useStyle.ts","components/atoms/Links/MenuDrawerLink.tsx","components/organisms/Drawer/styles/useStyles.ts","components/organisms/Drawer/Drawer.tsx","routes/links.ts","components/organisms/Toolbar/styles/useStyles.ts","components/organisms/Toolbar/AppBar.tsx","components/layouts/app/styles/useStyles.ts","components/layouts/app/AppLayout.tsx","constants/serviceConst.ts","config/auth/authFields.ts","store/auth/configStore.ts","api/urls.ts","api/request.ts","services/google.service.ts","store/auth/actions.ts","store/auth/sagas.ts","store/auth/reducer.ts","components/layouts/forms/styles/useStyles.ts","components/layouts/forms/styles/IconSochialStyled.ts","components/layouts/forms/AuthLayoutForm.tsx","constants/svgIconPath.ts","pages/Login.tsx","routes/routes.ts","pages/Code.tsx","pages/GitHub.tsx","pages/Messages.tsx","pages/Profile.tsx","routes/RootRouter.tsx","store/rootSaga.store.ts","store/layout/configStore.ts","store/layout/reducer.ts","store/configStore.ts","store/rootReducer.ts","styles/theme/StyledTheme.ts","styles/theme/GlobalStyled.ts","styles/theme/MaterialTheme.ts","app/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Home","useDrawerLinkStyle","makeStyles","theme","link","marginBottom","spacing","background","purple","icon","fontSize","breakpoints","down","MenuDrawerLink","text","to","Icon","onClick","classes","forward","forwardRef","props","ref","ListItem","button","className","component","ListItemIcon","color","ListItemText","primary","whyDidYouRender","displayName","useDrawerStyles","paper","width","list","marginTop","drawer","flexShrink","whiteSpace","drawerClose","overflowX","transition","transitions","create","easing","sharp","duration","leavingScreen","up","drawerOpen","enteringScreen","Drawer","isShow","hideDrawer","clsxNames","clsx","memoListComponent","useMemo","codeBadge","gitHubBadge","settingsBadge","isAuth","HomeIcon","badge","badgeColor","GitHubIcon","CodeIcon","SettingsIcon","links","map","linkProps","index","key","variant","List","children","useAppBarStyles","appBar","zIndex","appTitle","marginLeft","appBarShift","buttons","display","toolbar","padding","justifyContent","AppBar","showDrawer","history","useHistory","handleClickLink","appClassName","position","Toolbar","IconButton","aria-label","Typography","push","useAppLayoutStyles","root","mixins","AppLayout","useState","isShowDrawer","setShowDrawer","useCallback","serviceConst","process","password","id","name","label","type","required","fullWidth","authState","signIn","login","signUp","email","initAuthFields","AuthState","token","isFetch","isFetchGoogle","authWithGoogle","userProfile","googleProfile","errors","errs","showErrors","googleErrors","AuthActionTypes","SAGA_SIGN_UP","SUCCESS_SIGN_UP","FAILURE_SIGN_UP","SAGA_SIGN_UP_GOOGLE","SAGA_SIGN_IN","SUCCESS_SIGN_IN","FAILURE_SIGN_IN","SAGA_SIGN_IN_GOOGLE","LOGIN_SIGN","LOGOUT","AUTH_API","ROOT_API","authUrls","signInGoogle","signUpGoogle","request","url","requestInit","a","fetch","method","headers","body","JSON","stringify","apiCall","json","console","error","googleSign","gapi","auth2","getAuthInstance","googleApiCall","getAuthResponse","id_token","getBasicProfile","getId","getEmail","fullName","getName","image","getImageUrl","TokenID","log","$signInSuccess","payload","action","Types","$signInFailure","$signUpSuccess","$signUpFailure","logout","loginRequest","signInSaga","$signInGoogleSaga","signUpSaga","$signUpGoogleSaga","authWatch","loginWatch","authSaga","Cookies","remove","toast","put","msg","call","success","warn","message","omit","data","set","rest","apiCallProfile","apiCallSignUp","googleID","googleToken","newUser","takeEvery","all","fork","authReducer","state","user","useAuthFormStyles","maxWidth","borderRadius","alignItems","flexDirection","backgroundColor","top","boxShadow","shadows","right","closeButton","margin","avatar","sendButton","isAccountText","cursor","IconSocialStyled","styled","svg","src","AuthLayout","hideForm","dispatch","useDispatch","setKey","isSignIn","setIsSignIn","fieldsState","setFieldsState","handleFieldChange","event","target","value","prevState","handleToggleSignIn","handleSendForm","pickBy","identity","$signUpSaga","getText","goTo","isHaveAccount","Fields","fields","Grid","container","item","xs","sm","TextField","onChange","useEffect","Container","Avatar","noValidate","Button","publicRoutes","path","exact","Pages","paragraph","privateRoutes","RootRouter","routeProps","from","pathname","rootSaga","LayoutState","themeColor","LayoutActionTypes","SET","layoutReducer","createBrowserHistory","store","initialState","INITIAL_REDUX_STATE","sagaMiddleware","composeWithDevTools","createSagaMiddleware","createStore","combineReducers","router","connectRouter","$layout","$auth","applyMiddleware","routerMiddleware","run","configStore","StyledTheme","colors","md","lg","xl","GlobalStyled","createGlobalStyle","MuiTheme","createMuiTheme","palette","light","main","dark","contrastText","secondary","red","keys","values","App","script","document","createElement","async","defer","onload","load","init","client_id","err","head","appendChild","googleService","noInitialPop","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7cbf17e0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {FC} from 'react'\n\nexport const Home: FC = () => {\n  return <div>Home</div>\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\nimport purple from '@material-ui/core/colors/purple'\n\nexport const useDrawerLinkStyle = makeStyles((theme: Theme) => ({\n  link: {\n    marginBottom: theme.spacing(3),\n    '&:hover': {\n      background: purple[50]\n    }\n  },\n  icon: {\n    fontSize: '2.5em',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '2em'\n    }\n  }\n}))\n","import React, {FC, Ref, forwardRef} from 'react'\nimport {Link, LinkProps} from 'react-router-dom'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport {useDrawerLinkStyle} from './styles'\nimport {ILink} from '../../../ts/router'\n\nconst MenuDrawerLink: FC<ILink> = ({text, to, Icon, onClick}) => {\n  /** hooks **/\n  const classes = useDrawerLinkStyle()\n\n  /** components **/\n  const forward: LinkProps['component'] = forwardRef((props, ref: Ref<HTMLDivElement>) => (\n    <Link ref={ref} {...props} />\n  ))\n\n  /** render **/\n  return (\n    <ListItem button to={to} className={classes.link} component={forward} onClick={onClick}>\n      <ListItemIcon>\n        <Icon color=\"primary\" className={classes.icon} />\n      </ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  )\n}\n\n/* Audit */\nMenuDrawerLink.whyDidYouRender = true\nMenuDrawerLink.displayName = 'DrawerLink *Atom*'\n\nexport {MenuDrawerLink}\n","import {makeStyles, Theme} from '@material-ui/core/styles'\n\nconst drawerWidth = 240\nexport const useDrawerStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    width: '100%'\n  },\n  list: {\n    marginTop: theme.spacing(9)\n  },\n  drawer: {\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerClose: {\n    width: 0,\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    /**\n     * up SM\n     * **/\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  drawerOpen: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    /**\n     * up SM\n     * **/\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth\n    }\n  }\n}))\n","import React, {FC, useMemo} from 'react'\nimport clsx from 'clsx'\n\nimport List from '@material-ui/core/List'\nimport DrawerMui from '@material-ui/core/Drawer'\n\nimport {links} from '../../../routes'\n\nimport {MenuDrawerLink} from '../../atoms/Links'\n\nimport {IIDrawer} from './ts'\nimport {useDrawerStyles} from './styles'\n\n/**\n * Drawer Component\n * **/\nconst Drawer: FC<IIDrawer> = ({isShow, hideDrawer}) => {\n  /** hooks **/\n  const classes = useDrawerStyles()\n\n  /** constants **/\n  const clsxNames = {\n    drawer: clsx(classes.drawer, {\n      [classes.drawerOpen]: isShow,\n      [classes.drawerClose]: !isShow\n    }),\n    classes: {\n      paper: clsx(classes.paper, {\n        [classes.drawerOpen]: isShow,\n        [classes.drawerClose]: !isShow\n      })\n    }\n  }\n  const memoListComponent = useMemo(() => {\n    return links({}, {}, {}).map(\n      (linkProps, index) =>\n        linkProps.isAuth && <MenuDrawerLink key={index} {...linkProps} onClick={hideDrawer} />\n    )\n  }, [hideDrawer])\n\n  /** render **/\n  return (\n    <DrawerMui variant=\"permanent\" className={clsxNames.drawer} classes={clsxNames.classes}>\n      <List className={classes.list} children={memoListComponent} />\n    </DrawerMui>\n  )\n}\n\n/**\n * Audit\n * **/\nDrawer.whyDidYouRender = true\nDrawer.displayName = 'Drawer *Organism*'\n\nexport default Drawer\n","import MailIcon from '@material-ui/icons/Mail'\nimport CodeIcon from '@material-ui/icons/Code'\nimport HomeIcon from '@material-ui/icons/Home'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\nimport {ILink, badgeProps} from '../ts/router'\n\n/* Drawers */\nconst code = ({badge, badgeColor}: badgeProps): ILink => {\n  return {\n    badge,\n    badgeColor,\n    isAuth: true,\n    to: '/code',\n    text: 'code',\n    Icon: CodeIcon\n  }\n}\nconst settings = ({badge, badgeColor}: badgeProps): ILink => {\n  return {\n    badge,\n    badgeColor,\n    to: '/settings',\n    text: 'settings',\n    Icon: SettingsIcon\n  }\n}\nconst gitHub = ({badge, badgeColor}: badgeProps): ILink => {\n  return {\n    badge,\n    badgeColor,\n    isAuth: true,\n    to: '/gitHub',\n    text: 'gitHub',\n    Icon: GitHubIcon\n  }\n}\n\n/* Accounts */\nconst exit = (handleExit: () => void): ILink => {\n  return {\n    to: '/',\n    text: 'exit',\n    onClick: handleExit,\n    Icon: ExitToAppIcon\n  }\n}\nconst profile = ({badge, badgeColor}: badgeProps): ILink => {\n  return {\n    badge,\n    badgeColor,\n    to: '/profile',\n    text: 'profile',\n    Icon: AccountCircleIcon\n  }\n}\nconst messages = ({badge, badgeColor}: badgeProps): ILink => {\n  return {\n    badge,\n    badgeColor,\n    to: '/messages',\n    text: 'messages',\n    Icon: MailIcon\n  }\n}\n\n/* App Links */\nexport const links = (codeBadge?: any, gitHubBadge?: any, settingsBadge?: any): ILink[] => {\n  return [\n    {\n      to: '/',\n      text: 'home',\n      isAuth: true,\n      Icon: HomeIcon\n    },\n    gitHub({...gitHubBadge}),\n    code({...codeBadge}),\n    settings({...settingsBadge})\n  ]\n}\n\nexport const drawerMobileLinks = (\n  profileBadge: badgeProps,\n  messagesBadge: badgeProps,\n  events: any\n): ILink[] => {\n  return [profile(profileBadge), messages(messagesBadge), exit(events.handleExit)]\n}\n\nexport const drawerDesktopLinks = (profileBadge: badgeProps, events: any): ILink[] => {\n  return [profile(profileBadge), exit(events.handleExit)]\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useAppBarStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appTitle: {\n    marginLeft: theme.spacing(5)\n  },\n  appBarShift: {\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  buttons: {\n    display: 'flex'\n  },\n  toolbar: {\n    padding: 0,\n    justifyContent: 'space-between'\n  }\n}))\n","import React, {FC} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport clsx from 'clsx'\n\nimport Toolbar from '@material-ui/core/Toolbar'\nimport AppBarMui from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\n\nimport {useAppBarStyles} from './styles'\nimport {IAppBar} from './ts'\n\n/**\n * AppBar\n * **/\nexport const AppBar: FC<IAppBar> = ({isShow, showDrawer, hideDrawer}) => {\n  /** hooks **/\n  const history = useHistory()\n  const classes = useAppBarStyles()\n\n  /** event handlers **/\n  const goToAuth = () => history.push('/login')\n  const handleClickLink = isShow ? hideDrawer : showDrawer\n\n  /** constants **/\n  const icon = isShow ? <CloseIcon /> : <MenuIcon />\n  const appClassName = clsx(classes.appBar, {[classes.appBarShift]: isShow})\n\n  /** render **/\n  return (\n    <AppBarMui position=\"fixed\" className={appClassName}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleClickLink}>\n          {icon}\n        </IconButton>\n        <Typography variant=\"h6\" children=\"@devs9-kit\" className={classes.appTitle} />\n        <div className={classes.buttons}>\n          <IconButton color=\"inherit\" aria-label=\"open account\" onClick={goToAuth}>\n            <ExitToAppIcon />\n          </IconButton>\n        </div>\n      </Toolbar>\n    </AppBarMui>\n  )\n}\n\n/**\n * Audit\n * **/\nAppBar.whyDidYouRender = true\nAppBar.displayName = 'AppBar *Organism*'\n","import {makeStyles, Theme} from '@material-ui/core/styles'\n\nexport const useAppLayoutStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    padding: theme.spacing(11, 3, 0),\n    ...theme.mixins.toolbar\n  }\n}))\n","import React, {FC, useState, useCallback} from 'react'\n\nimport {AppBar, Drawer} from '../../organisms'\n\nimport {useAppLayoutStyles} from './styles'\n\n/**\n * AppLayout\n * **/\nexport const AppLayout: FC = ({children}) => {\n  /** hooks **/\n  const classes = useAppLayoutStyles()\n\n  /** states **/\n  const [isShowDrawer, setShowDrawer] = useState(false)\n\n  /** event handlers **/\n  const showDrawer = useCallback(() => {\n    setShowDrawer(true)\n  }, [])\n  const hideDrawer = useCallback(() => {\n    setShowDrawer(false)\n  }, [])\n\n  /** render **/\n  return (\n    <div className={classes.root}>\n      <Drawer isShow={isShowDrawer} hideDrawer={hideDrawer} />\n      <AppBar isShow={isShowDrawer} showDrawer={showDrawer} hideDrawer={hideDrawer} />\n      {children}\n    </div>\n  )\n}\n\n/**\n * Audit\n * **/\nAppLayout.whyDidYouRender = true\nAppLayout.displayName = 'AppLayout *Layout*'\n","export const serviceConst = {\n  googleClientID: process.env.REACT_APP_GOOGLE_CLIENT_ID\n}\n","/**\n * Fields\n * **/\nconst name = {\n  id: 'name',\n  name: 'name',\n  label: 'Имя',\n  required: true\n}\nconst email = {\n  id: 'email',\n  name: 'email',\n  label: 'Почта',\n  required: true,\n  fullWidth: true\n}\nconst login = {\n  id: 'login',\n  name: 'login',\n  label: 'Логин или почта',\n  required: true,\n  fullWidth: true\n}\nconst lastName = {\n  id: 'lastName',\n  name: 'lastName',\n  label: 'Фамилия'\n}\nconst username = {\n  id: 'login',\n  name: 'login',\n  label: 'Логин',\n  fullWidth: true\n}\nconst password = {\n  id: 'password',\n  name: 'password',\n  label: 'Пароль',\n  type: 'password',\n  required: true,\n  fullWidth: true\n}\nconst repeatPassword = {\n  id: 'repeatPassword',\n  name: 'repeatPassword',\n  label: 'Повторите пароль',\n  type: 'password',\n  required: true,\n  fullWidth: true\n}\n\n/**\n * Configs\n * **/\nexport const authState = {\n  signIn: {\n    login: '',\n    password: ''\n  },\n  signUp: {\n    name: '',\n    email: '',\n    login: '',\n    password: ''\n  }\n}\nexport const initAuthFields = {\n  signIn: [login, password],\n  signUp: [email, username, name, lastName, password, repeatPassword]\n}\n","import {IAuthState} from '../../ts'\n\nconst globalAction = '@@Auth/'\nexport const AuthState: IAuthState = {\n  token: '',\n  isAuth: false,\n  isFetch: false,\n  isFetchGoogle: false,\n  authWithGoogle: false,\n  userProfile: {},\n  googleProfile: {},\n  errors: {\n    errs: [],\n    showErrors: '',\n    googleErrors: null\n  }\n}\n\nexport const AuthActionTypes = {\n  /* Sign Up Types */\n  SAGA_SIGN_UP: `${globalAction}***SAGA_SIGN_UP***`,\n  SUCCESS_SIGN_UP: `${globalAction}***SUCCESS_SIGN_UP***`,\n  FAILURE_SIGN_UP: `${globalAction}***FAILURE_SIGN_UP***`,\n  SAGA_SIGN_UP_GOOGLE: `${globalAction}***SAGA_SIGN_IN_GOOGLE***`,\n  /* Sign In Types */\n  SAGA_SIGN_IN: `${globalAction}***SAGA_SIGN_IN***`,\n  SUCCESS_SIGN_IN: `${globalAction}***SUCCESS_SIGN_IN***`,\n  FAILURE_SIGN_IN: `${globalAction}***FAILURE_SIGN_IN***`,\n  SAGA_SIGN_IN_GOOGLE: `${globalAction}***SAGA_SIGN_IN_GOOGLE***`,\n  /* Other Auth Types */\n  LOGIN_SIGN: `${globalAction}***LOGIN_SIGN_IN***`,\n  LOGOUT: `${globalAction}***LOGOUT***`\n}\n","/**\n *  Root Api\n * **/\nconst apiDev = 'http://localhost:7777'\nconst apiProd = 'http://localhost:7777' // 'https://devs9-kit-backend.herokuapp.com'\n\nexport const ROOT_API = process.env.NODE_ENV === 'production' ? apiProd : apiDev\n\n/**\n *  Api Branches\n * **/\nconst AUTH_API = ROOT_API + '/api/auth'\n\n/**\n *  Auth Api Urls\n * **/\nexport const authUrls = {\n  login: `${AUTH_API}/login`,\n  signIn: `${AUTH_API}/sign_in`,\n  signUp: `${AUTH_API}/sign_up`,\n  signInGoogle: `${AUTH_API}/sign_in_google`,\n  signUpGoogle: `${AUTH_API}/sign_up_google`\n}\n","import {IFetchRequest} from '../ts'\n\n/**\n *  App Request\n * **/\nexport const request = async (url: string, requestInit: IFetchRequest) => {\n  try {\n    const apiCall = await fetch(url, {\n      method: requestInit.method || 'POST',\n      headers: {\n        // Authorization: `${token && token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestInit.body)\n    })\n\n    return apiCall.json()\n  } catch (error) {\n    console.error(`🔥 REQUEST ERROR!`, error)\n  }\n}\n","import {serviceConst} from '../constants'\n\nexport const googleService = () => {\n  const script = document.createElement('script')\n\n  script.src = 'https://apis.google.com/js/platform.js'\n  script.async = true\n  script.defer = true\n  script.onload = () =>\n    window.gapi.load('auth2', () => {\n      try {\n        gapi.auth2.init({client_id: serviceConst.googleClientID})\n      } catch (err) {\n        console.log('🔥 Google SignIn ERROR 🔥', err)\n      }\n    })\n  document.head.appendChild(script)\n}\nexport const googleSign = async () => {\n  try {\n    const googleApiCall = await window.gapi.auth2.getAuthInstance().signIn()\n\n    const {id_token} = googleApiCall.getAuthResponse()\n    const id = googleApiCall.getBasicProfile().getId()\n    const email = googleApiCall.getBasicProfile().getEmail()\n    const fullName = googleApiCall.getBasicProfile().getName()\n    const image = googleApiCall.getBasicProfile().getImageUrl()\n\n    return {TokenID: id_token, email, fullName, image, id}\n  } catch (err) {\n    console.log('🔥 Google SignIn ERROR 🔥', err)\n  }\n}\n","import {action} from 'typesafe-actions'\n\nimport {AuthActionTypes as Types} from './configStore'\nimport {ISignInPayload, ISignUpPayload} from '../../ts'\n\n/* Sign In Actions */\nexport const $googleSignInSaga = () => action(Types.SAGA_SIGN_IN_GOOGLE)\nexport const $signInSaga = (payload: Partial<ISignInPayload>) => action(Types.SAGA_SIGN_IN, payload)\nexport const $signInSuccess = (payload: any) => action(Types.SUCCESS_SIGN_IN, payload)\nexport const $signInFailure = (payload: any) => action(Types.FAILURE_SIGN_IN, payload)\n\n/* Sign Up Actions */\nexport const $signUpSaga = (payload: Partial<ISignUpPayload>) => action(Types.SAGA_SIGN_UP, payload)\nexport const $signUpSuccess = (payload: any) => action(Types.SUCCESS_SIGN_UP, payload)\nexport const $signUpFailure = (payload: any) => action(Types.FAILURE_SIGN_UP, payload)\n\n/* Login Auth Actions */\nexport const $logout = () => action(Types.LOGOUT)\nexport const $loginSign = () => action(Types.LOGIN_SIGN)\n","import {all, fork, put, call, takeEvery} from 'redux-saga/effects'\nimport {toast} from 'react-toastify'\nimport Cookies from 'js-cookie'\nimport {omit} from 'lodash'\n\nimport {AuthActionTypes} from './configStore'\nimport {request, authUrls} from '../../api'\nimport {googleSign} from '../../services'\nimport {$signInFailure, $signInSuccess, $signUpFailure, $signUpSuccess} from './actions'\nimport {ISignUpAction, ISignInAction, googleProfileT} from '../../ts'\n\n/* Sagas */\nfunction* logout() {\n  try {\n    Cookies.remove('user')\n  } catch (err) {\n    toast.error('🔥LOGIN ERROR🔥 ***logout saga***')\n    yield put($signInFailure({msg: '🔥LOGIN ERROR🔥 ***logout saga***'}))\n  }\n}\n\nfunction* loginRequest() {\n  try {\n    const apiCall = yield call(request, authUrls.login, {method: 'get'})\n\n    if (!apiCall.success) {\n      toast.warn(apiCall.message)\n      yield put($signInFailure({msg: `${apiCall.message}`}))\n    } else {\n      yield put($signInSuccess(omit(apiCall.data, ['_id', 'password', 'repeatPassword'])))\n    }\n  } catch (err) {\n    toast.error('🔥LOGIN ERROR🔥 ***loginRequest saga***')\n    yield put($signInFailure({msg: '🔥LOGIN ERROR🔥 ***loginRequest saga***'}))\n  }\n}\n\nfunction* signInSaga({payload}: ISignInAction) {\n  try {\n    const apiCall = yield call(request, authUrls.signIn, {\n      body: payload\n    })\n\n    if (!apiCall.success) {\n      toast.warn(apiCall.message)\n      yield put($signInFailure({msg: `${apiCall.message}`}))\n    } else {\n      Cookies.set('user', apiCall.data.token)\n      yield put($signInSuccess(apiCall.data))\n    }\n  } catch (err) {\n    toast.error(`🔥SIGN_IN ERROR 🔥 ***signInRequest saga***`)\n    yield put($signInFailure({msg: '🔥SIGN_IN ERROR🔥 ***signInRequest saga***'}))\n  }\n}\n\nfunction* $signInGoogleSaga() {\n  try {\n    const apiCall: googleProfileT = yield call(googleSign)\n\n    if (apiCall.email) {\n      const {email, fullName, ...rest} = apiCall\n\n      console.log(apiCall)\n      // Cookies.set('user', apiCall.id)\n      yield put($signUpSuccess({email, name: fullName, googleProfile: rest}))\n    }\n  } catch (err) {\n    toast.error('🔥 GOOGLE LOGIN ERROR🔥 ***$signInGoogleSaga saga***')\n  }\n}\n\nfunction* signUpSaga({payload}: ISignUpAction) {\n  try {\n    const apiCall = yield call(request, authUrls.signUp, {\n      body: payload\n    })\n\n    if (!apiCall.success) {\n      toast.warn(apiCall.message)\n      yield put($signUpFailure({msg: apiCall.message}))\n    } else {\n      Cookies.set('user', apiCall.data.token)\n      yield put($signUpSuccess(apiCall.data))\n    }\n  } catch (err) {\n    toast.error('🔥SIGN_UP ERROR🔥 ***signUpRequest saga***')\n    yield put($signUpFailure({msg: '🔥SIGN_UP ERROR🔥 ***signInRequest saga***'}))\n  }\n}\n\nfunction* $signUpGoogleSaga() {\n  try {\n    const apiCallProfile: googleProfileT = yield call(googleSign)\n\n    if (apiCallProfile.email) {\n      const {email, fullName, ...rest} = apiCallProfile\n      const apiCallSignUp = yield call(request, authUrls.signUpGoogle, {\n        body: apiCallProfile\n      })\n\n      console.log(1, apiCallProfile)\n      console.log(2, apiCallSignUp)\n\n      const {googleID, googleToken} = apiCallProfile\n      const newUser = {\n        email,\n        fullName,\n        googleID,\n        googleToken,\n        ...rest\n      }\n      // Cookies.set('user', apiCall.id)\n      yield put($signUpSuccess(newUser))\n    }\n  } catch (err) {\n    toast.error('🔥 GOOGLE LOGIN ERROR🔥 ***$signInGoogleSaga saga***')\n  }\n}\n\n/* Watchers */\nfunction* authWatch() {\n  yield takeEvery(AuthActionTypes.SAGA_SIGN_UP, signUpSaga)\n  yield takeEvery(AuthActionTypes.SAGA_SIGN_IN, signInSaga)\n  yield takeEvery(AuthActionTypes.SAGA_SIGN_IN_GOOGLE, $signInGoogleSaga)\n  yield takeEvery(AuthActionTypes.SAGA_SIGN_UP_GOOGLE, $signUpGoogleSaga)\n}\nfunction* loginWatch() {\n  yield takeEvery(AuthActionTypes.LOGIN_SIGN, loginRequest)\n  yield takeEvery(AuthActionTypes.LOGOUT, logout)\n}\n\n/* Forks */\nexport function* authSaga() {\n  yield all([fork(authWatch)])\n  yield all([fork(loginWatch)])\n}\n","import {Reducer} from 'redux'\n\nimport {AuthState, AuthActionTypes as Types} from './configStore'\nimport {IAuthState} from '../../ts'\n\nexport const authReducer: Reducer<IAuthState> = (state = AuthState, action) => {\n  switch (action.type) {\n    /* Saga Starts */\n    case Types.SAGA_SIGN_IN:\n    case Types.SAGA_SIGN_UP: {\n      return {...state, isFetch: true}\n    }\n\n    /* Success Types */\n    case Types.SUCCESS_SIGN_IN:\n    case Types.SUCCESS_SIGN_UP: {\n      return {\n        ...state,\n        isAuth: true,\n        isFetch: false,\n        token: action.payload.token,\n        userProfile: action.payload.user,\n        googleProfile: action.payload.googleProfile\n      }\n    }\n\n    /* Failure Types */\n    case Types.FAILURE_SIGN_IN:\n    case Types.FAILURE_SIGN_UP: {\n      return {...state, isFetch: false, error: action.payload}\n    }\n\n    /* Auth Login Types */\n    case Types.LOGIN_SIGN: {\n      return {\n        ...state,\n        isAuth: true,\n        isFetch: false,\n        ...action.payload\n      }\n    }\n    case Types.LOGOUT: {\n      return AuthState\n    }\n\n    /* Default */\n    default: {\n      return state\n    }\n  }\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useAuthFormStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 300,\n    color: '#000',\n    maxWidth: 330,\n    display: 'flex',\n    borderRadius: 15,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    padding: '10px 20px 20px',\n    top: theme.spacing(1),\n    boxShadow: theme.shadows[1],\n    right: theme.spacing(1),\n    zIndex: theme.zIndex.drawer + 1\n  },\n  closeButton: {\n    top: 0,\n    right: 0,\n    margin: 0,\n    position: 'absolute'\n  },\n  avatar: {\n    marginBottom: 15,\n    backgroundColor: '#dd4B39'\n  },\n  sendButton: {\n    marginTop: 15\n  },\n  isAccountText: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  }\n}))\n","import styled from 'styled-components'\n\nexport const IconSocialStyled = styled.svg<{src: string}>`\n  width: 50px;\n  height: 50px;\n  display: block;\n  cursor: pointer;\n  background-size: 75%;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-image: url(${({src}) => src});\n`\n","import React, {FC, useState, useMemo, useEffect, useCallback} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {pickBy, identity} from 'lodash'\n\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Container from '@material-ui/core/Container'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\n\nimport {googleIcon} from '../../../constants'\nimport {initAuthFields, authState} from '../../../config/auth'\nimport {$signUpSaga, $signInSaga, $googleSignInSaga} from '../../../store/auth'\n\nimport {useAuthFormStyles, IconSocialStyled} from './styles'\nimport {IAuthLayout} from './ts'\n\nconst AuthLayout: FC<IAuthLayout> = ({hideForm}) => {\n  /** hooks **/\n  const dispatch = useDispatch()\n  const classes = useAuthFormStyles()\n\n  /** states **/\n  const [key, setKey] = useState(1)\n  const [isSignIn, setIsSignIn] = useState(true)\n  const [fieldsState, setFieldsState] = useState(isSignIn ? authState.signIn : authState.signUp)\n\n  /** event handlers **/\n  const handleGoogleAuth = () => dispatch($googleSignInSaga())\n  const handleFieldChange = useCallback((event) => {\n    const {\n      target: {value, name}\n    } = event\n\n    setFieldsState((prevState) => ({...prevState, [name]: value}))\n  }, [])\n  const handleToggleSignIn = useCallback(() => {\n    setIsSignIn(!isSignIn)\n    setKey(key + 1)\n  }, [isSignIn, key])\n  const handleSendForm = useCallback(() => {\n    return isSignIn\n      ? dispatch($signInSaga(pickBy(fieldsState, identity)))\n      : dispatch($signUpSaga(pickBy(fieldsState, identity)))\n  }, [dispatch, fieldsState, isSignIn])\n\n  /** constants **/\n  const getText = useMemo(() => {\n    if (isSignIn) {\n      return {\n        button: 'Войти',\n        goTo: 'Зарегистриирваться!',\n        isHaveAccount: 'Нет аккаунта? '\n      }\n    }\n\n    return {\n      goTo: 'Войти!',\n      button: 'Зарегистриирваться',\n      isHaveAccount: 'Есть аккаунт? '\n    }\n  }, [isSignIn])\n\n  /** memo components **/\n  const Fields = useMemo(() => {\n    const fields = isSignIn ? initAuthFields.signIn : initAuthFields.signUp\n\n    return (\n      <Grid container spacing={2}>\n        {fields.map(({id, type, label, name, required, fullWidth}: TextFieldProps) => (\n          <Grid item xs={12} sm={!fullWidth && 6} key={id}>\n            <TextField\n              fullWidth\n              id={id}\n              name={name}\n              type={type}\n              label={label}\n              variant=\"outlined\"\n              required={required}\n              onChange={handleFieldChange}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  }, [handleFieldChange, isSignIn])\n\n  /** effects **/\n  useEffect(() => {\n    setFieldsState(isSignIn ? authState.signIn : authState.signUp)\n  }, [isSignIn])\n\n  /** render **/\n  return (\n    <Container component=\"main\" className={classes.root}>\n      <IconButton className={classes.closeButton} onClick={hideForm}>\n        <CloseIcon />\n      </IconButton>\n      <Avatar className={classes.avatar} children={<LockOutlinedIcon />} />\n      <form noValidate key={key}>\n        {Fields}\n        <Button\n          fullWidth\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleSendForm}\n          children={getText.button}\n          className={classes.sendButton}\n        />\n      </form>\n      <IconSocialStyled src={googleIcon} onClick={handleGoogleAuth} />\n      <div>\n        <Typography component=\"span\" variant=\"subtitle2\" children={getText.isHaveAccount} />\n        <Typography\n          color=\"primary\"\n          component=\"span\"\n          variant=\"subtitle2\"\n          children={getText.goTo}\n          onClick={handleToggleSignIn}\n          className={classes.isAccountText}\n        />\n      </div>\n    </Container>\n  )\n}\n\n/**\n * Audit\n * **/\nAuthLayout.whyDidYouRender = true\nAuthLayout.displayName = '_**Layout**_AuthLayout'\n\nexport {AuthLayout}\n","/**\n * Social Icons\n * **/\nexport const googleIcon = '/svg/google.svg'\nexport const githubIcon = '/svg/github.svg'\nexport const linkedinIcon = '/svg/linkedin.svg'\nexport const facebookIcon = '/svg/facebook.svg'\n","import React, {FC} from 'react'\n\nimport {useHistory} from 'react-router-dom'\n\nimport {Home} from './Home'\nimport {AuthLayout} from '../components/layouts'\n\nexport const Login: FC = () => {\n  /** hooks **/\n  const history = useHistory()\n\n  /** event handlers **/\n  const goToHome = () => history.push('/')\n\n  /** render **/\n  return (\n    <>\n      <Home />\n      <AuthLayout hideForm={goToHome} />\n    </>\n  )\n}\n","import * as Pages from '../pages'\n\nimport {routeT} from '../ts/router'\n\nexport const publicRoutes: routeT[] = [\n  {\n    path: '/',\n    exact: true,\n    component: Pages.Home\n  },\n  {\n    exact: false,\n    path: '/login',\n    component: Pages.Login\n  },\n  {\n    exact: false,\n    path: '/code',\n    component: Pages.Code\n  },\n  {\n    exact: false,\n    path: '/github',\n    component: Pages.GitHub\n  }\n]\nexport const privateRoutes: routeT[] = [\n  {\n    path: '/messages',\n    isAuth: false,\n    exact: true,\n    component: Pages.Messages\n  },\n  {\n    exact: false,\n    isAuth: true,\n    path: '/profile',\n    component: Pages.Profile\n  }\n]\n","import React, {FC} from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport const Code: FC = () => {\n  return (\n    <div>\n      <Typography paragraph>Code</Typography>\n    </div>\n  )\n}\n","import React, {FC} from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport const GitHub: FC = () => {\n  return (\n    <div>\n      <Typography paragraph>GitHub</Typography>\n    </div>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Messages: FC = () => {\n  return <div>Messages</div>\n}\n","import React, {FC} from 'react'\n\nexport const Profile: FC = () => {\n  return <div>Profile</div>\n}\n","import React, {FC} from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\n\nimport {AppLayout} from '../components/layouts/app'\n\nimport {privateRoutes, publicRoutes} from './routes'\n\n/**\n * RootRouter\n * **/\nconst RootRouter: FC = () => {\n  /** render **/\n  return (\n    <AppLayout>\n      <Switch>\n        {/* Public Routes */}\n        {publicRoutes.map(({path, component}) => (\n          <Route key={`route-${path}`} exact path={path} component={component} />\n        ))}\n        {/* Private Routes */}\n        {privateRoutes.map(\n          ({path, isAuth, ...routeProps}) =>\n            isAuth && <Route key={`private-route-${path}`} {...routeProps} path={path} />\n        )}\n        <Redirect from=\"*\" to={{pathname: '/'}} />\n      </Switch>\n    </AppLayout>\n  )\n}\n\n/**\n * Audit\n * **/\nRootRouter.whyDidYouRender = true\nRootRouter.displayName = 'RootRouter *Router*'\n\nexport default RootRouter\n","import {all, fork} from 'redux-saga/effects'\nimport {authSaga} from './auth'\n\nexport function* rootSaga() {\n  yield all([fork(authSaga)])\n}\n","import {ILayoutState} from '../../ts'\n\nconst globalAction = '@@Layout/'\nexport const LayoutState: ILayoutState = {\n  themeColor: 'light'\n}\nexport const LayoutActionTypes = {\n  SET: `${globalAction}***SET***`\n}\n","import {Reducer} from 'redux'\nimport {LayoutState, LayoutActionTypes as Types} from './configStore'\nimport {ILayoutState} from '../../ts'\n\nexport const layoutReducer: Reducer<ILayoutState> = (state = LayoutState, action) => {\n  switch (action.type) {\n    case Types.SET: {\n      return {...state, themeColor: action.payload}\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import {Store, createStore, applyMiddleware} from 'redux'\nimport {History, createBrowserHistory} from 'history'\nimport createSagaMiddleware from 'redux-saga'\nimport {routerMiddleware} from 'connected-react-router'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {rootSaga} from './rootSaga.store'\nimport {rootReducer} from './rootReducer'\nimport {IState} from '../ts'\n\nconst configStore = (): Store<IState> => {\n  const initialState: IState = window.INITIAL_REDUX_STATE\n  const composeEnhancers = composeWithDevTools({})\n  const sagaMiddleware = createSagaMiddleware()\n  const store = createStore(\n    rootReducer(history),\n    initialState,\n    process.env.NODE_ENV !== 'production'\n      ? composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n      : applyMiddleware(routerMiddleware(history), sagaMiddleware)\n  )\n\n  sagaMiddleware.run(rootSaga)\n  return store\n}\nconst history: History = createBrowserHistory()\nconst store = configStore()\n\nexport {store, history}\n","import {History} from 'history'\nimport {combineReducers} from 'redux'\nimport {connectRouter} from 'connected-react-router'\nimport {authReducer} from './auth'\nimport {layoutReducer} from './layout'\n\nexport const rootReducer = (history: History) => {\n  return combineReducers({\n    router: connectRouter(history),\n    $layout: layoutReducer,\n    $auth: authReducer\n  })\n}\n","/**\n *  Colors\n * **/\nconst colors = {\n  primary: '#465534'\n}\n\n/**\n *  Breakpoints\n * **/\nconst breakpoints = {\n  xs: '375px',\n  sm: '600px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px'\n}\n\n/**\n *  Theme\n * **/\nexport const StyledTheme = {\n  colors,\n  breakpoints\n}\n","import {createGlobalStyle} from 'styled-components'\n\n/**\n *  Global Theme Styles\n * **/\nexport const GlobalStyled = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  li {\n    list-style: none;\n  }\n  input, select { \n    font-size: 100%;\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n`\n","import {createMuiTheme} from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\n\nexport const MuiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#776b93',\n      main: '#5e5577',\n      dark: '#48425d',\n      contrastText: '#fff'\n    },\n    secondary: {main: '#f50057'},\n    error: {main: red[400], dark: red[700]}\n  },\n  breakpoints: {\n    keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n    values: {xs: 375, sm: 600, md: 768, lg: 1024, xl: 1440}\n  }\n})\n","import React, {FC, useEffect} from 'react'\nimport {Provider} from 'react-redux'\nimport {ThemeProvider} from 'styled-components'\nimport {ConnectedRouter} from 'connected-react-router'\nimport {ThemeProvider as MuiProvider} from '@material-ui/core/styles'\n\nimport RootRouter from '../routes'\nimport {googleService} from '../services'\nimport {store, history} from '../store'\nimport {GlobalStyled, StyledTheme, MuiTheme} from '../styles'\n\n/**\n * App\n * **/\nconst App: FC = () => {\n  /** effects **/\n  useEffect(() => {\n    googleService()\n    // UserStore && $SetUser(UserStore)\n  }, []) // $SetUser, UserStore\n\n  /** render **/\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={StyledTheme}>\n        <MuiProvider theme={MuiTheme}>\n          <ConnectedRouter noInitialPop history={history}>\n            <RootRouter />\n          </ConnectedRouter>\n        </MuiProvider>\n      </ThemeProvider>\n      <GlobalStyled />\n    </Provider>\n  )\n}\n\n/**\n * Audit\n * **/\nApp.displayName = 'App'\nApp.whyDidYouRender = true\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './services/serviceWorker'\n\nimport App from './app'\nimport './styles/scss/index.scss'\n\n/**\n * Audit\n * why did you render? (lib)\n * **/\nif (process.env.NODE_ENV !== 'production') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render')\n\n  whyDidYouRender(React, {\n    trackHooks: true,\n    trackAllPureComponents: true,\n    trackExtraHooks: [[require('react-redux/lib'), 'useSelector']]\n  })\n}\n\n/**\n * DOM Render\n * **/\nReactDOM.render(<App />, document.getElementById('root'))\n\n/**\n * Workers\n * **/\nserviceWorker.unregister()\n"],"sourceRoot":""}