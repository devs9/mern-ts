{"version":3,"sources":["store/auth/types.ts","api/urls.ts","api/fetchRequest.ts","store/auth/actions.ts","store/auth/sagas.ts","store/auth/reducer.ts","store/rootSaga.ts","store/configureStore.ts","store/rootReducer.ts","router/links.ts","components/atoms/Links/themes/useDrawerLinkS.ts","components/atoms/Links/MenuDrawerLink.tsx","components/organisms/Drawer/themes/useDrawerS.ts","components/organisms/Drawer/Drawer.tsx","components/organisms/Toolbar/themes/useAppBarS.ts","components/organisms/Toolbar/themes/ToolbarStyled.ts","constants/paths.ts","components/organisms/Toolbar/AppBar.tsx","components/layouts/app/themes/useAppLayoutS.ts","components/layouts/app/AppLayout.tsx","components/layouts/forms/themes/StyleSheet.ts","components/layouts/forms/themes/useAuthFormS.ts","components/layouts/forms/themes/IconSochialStyled.ts","components/layouts/forms/themes/AuthComponentsStyled.ts","components/layouts/forms/config/auth/authFields.ts","components/layouts/forms/AuthForm.tsx","components/layouts/forms/AuthLayoutForm.tsx","pages/Login.tsx","router/routes.ts","pages/Home.tsx","pages/Github.tsx","pages/Code.tsx","pages/Settings.tsx","pages/Profile.tsx","router/PrivateRoute.tsx","router/RootRouter.tsx","styles/themes/StyledTheme.ts","styles/themes/GlobalStyled.ts","styles/themes/MaterialTheme.ts","app/App.tsx","services/serviceWorker.ts","index.tsx"],"names":["SignInTypes","AUTH_API","ROOT_API","authUrls","login","signIn","signUp","signInGoogle","signUpGoogle","fetchRequest","url","requestInit","a","fetch","method","body","JSON","stringify","headers","Authorization","Cookies","get","console","error","fetchSignInStart","type","start","signInFetchSuccess","payload","success","signInFetchFailure","failure","signInFetch","signUpFetch","googleSignFetch","watchSignInFetch","watchSignUpFetch","watchGoogleSign","authSaga","put","authAction","call","apiCall","ok","json","apiData","toast","warn","message","log","cookie","set","data","res","status","fullName","email","takeEvery","signInSaga","signUpSaga","googleSignSaga","all","fork","initialState","isAuth","isFetch","profile","$authReducer","state","action","errors","rootSaga","store","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","initStore","createStore","combineReducers","applyMiddleware","run","configureStore","code","to","text","Icon","CodeIcon","home","HomeIcon","gitHub","GitHubIcon","settings","SettingsIcon","publicLinks","privateLinks","useDrawerLinkS","makeStyles","theme","root","background","palette","secondary","light","icon","opacity","fill","fontSize","breakpoints","down","MenuDrawerLink","onClick","classes","useStyle","forward","forwardRef","props","ref","ListItem","button","component","className","ListItemIcon","ListItemText","primary","useDrawerS","paper","width","backgroundColor","main","boxShadow","list","position","marginTop","spacing","paddingLeft","drawer","flexShrink","whiteSpace","drawerClose","overflowX","transition","transitions","create","easing","sharp","duration","leavingScreen","up","drawerOpen","enteringScreen","Drawer","isShow","hideDrawer","$isAuth","useSelector","clsxNames","clsx","variant","List","map","linkProps","index","key","useAppBarS","appBar","zIndex","appBarShift","ToolbarStyled","styled","Toolbar","only","imgPath","AppBar","showDrawer","history","useHistory","IconButton","aria-label","src","alt","push","useAppLayoutS","height","backgroundSize","backgroundImage","display","padding","AppLayout","children","useState","isShowDrawer","setShowDrawer","Paper","authSendButtonS","useAuthFormStyles","color","maxWidth","borderRadius","alignItems","flexDirection","shadows","top","right","IconSocialStyled","svg","ButtonCloseStyled","AvatarStyled","Avatar","BarButtonsStyled","div","password","id","name","label","required","fullWidth","signInFields","signUpFields","signInState","signUpState","lastName","repeatPassword","signInText","goTo","isHaveAccount","signUpText","AuthForm","isSignIn","textButton","dispatch","useDispatch","setKey","fields","setFields","fieldsState","setFieldsState","handleFieldChange","event","target","value","prevState","useEffect","noValidate","Grid","container","item","xs","sm","TextField","autoComplete","onChange","Button","style","signUpFetchSaga","AuthLayout","useStyles","setIsSignIn","texts","setTexts","Container","Typography","Login","publicRoutes","path","exact","privateRoutes","redirectPath","PrivateRoute","pathname","RootRouter","routes","route","from","StyledTheme","colors","md","lg","xl","GlobalStyled","createGlobalStyle","MuiTheme","createMuiTheme","contrastText","red","dark","keys","values","App","newestOnTop","hideProgressBar","autoClose","Flip","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6eda8457.chunk.js","sourcesContent":["export enum SignInTypes {\n  start = '@@Auth/SIGN_IN_FETCH_START',\n  signInSaga = '@@Auth/SIGN_IN_FETCH_SAGA',\n  signUpSaga = '@@Auth/SIGN_UP_FETCH_SAGA',\n  googleSignSaga = '@@Auth/GOOGLE_SIGN_SAGA',\n  success = '@@Auth/SIGN_IN_FETCH_SUCCESS',\n  failure = '@@Auth/SIGN_IN_FETCH_FAILURE'\n}\n","/**\n * Root Api\n */\nconst apiDev = 'http://localhost:7777'\nconst apiProd = 'http://localhost:7777' // 'https://devs9-kit-backend.herokuapp.com'\n\nexport const ROOT_API = process.env.NODE_ENV === 'production' ? apiProd : apiDev\n\n/**\n * Api Branches\n */\nconst AUTH_API = ROOT_API + '/api/auth'\n\n/**\n * Auth Api Urls\n */\nexport const authUrls = {\n  login: `${AUTH_API}/login`,\n  signIn: `${AUTH_API}/sign_in`,\n  signUp: `${AUTH_API}/sign_up`,\n  signInGoogle: `${AUTH_API}/sign_in_google`,\n  signUpGoogle: `${AUTH_API}/sign_up_google`\n}\n","import Cookies from 'js-cookie'\nimport {IFetchRequest} from '../react-app-env'\n\nexport const fetchRequest = async (url: string, requestInit: IFetchRequest) => {\n  try {\n    return await fetch(url, {\n      method: requestInit.method || 'POST',\n      body: JSON.stringify(requestInit.body),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${Cookies.get('authCookie') || ''}`\n      }\n    })\n  } catch (error) {\n    console.error(`🔥 REQUEST ERROR!`, error, '🔥')\n  }\n}\n","import {SignInTypes} from './types'\nimport {IErrors, ISignInPayload, ISignUpPayload, IProfile} from '../../interfaces/Store'\n\n/**\n * Simple Actions\n */\nexport const fetchSignInStart = () => ({type: SignInTypes.start})\nexport const signInFetchSuccess = (payload: IProfile) => ({\n  type: SignInTypes.success,\n  payload\n})\nexport const signInFetchFailure = (payload: IErrors) => ({type: SignInTypes.failure, payload})\n\n/**\n * Sagas Actions\n */\nexport const googleSignSaga = () => ({type: SignInTypes.googleSignSaga})\nexport const signInFetchSaga = (payload: ISignInPayload) => ({\n  type: SignInTypes.signInSaga,\n  payload\n})\nexport const signUpFetchSaga = (payload: ISignUpPayload) => ({\n  type: SignInTypes.signUpSaga,\n  payload\n})\n","import {all, call, fork, put, takeEvery} from 'redux-saga/effects'\nimport {toast} from 'react-toastify'\nimport Cookies from 'js-cookie'\n\nimport {SignInTypes} from './types'\nimport {fetchRequest, authUrls} from '../../api'\nimport * as authAction from './actions'\nimport {SignInRequestActionT, SignUpRequestActionT} from '../../interfaces/Store'\n\n/**\n * Sagas\n */\nfunction* signInFetch({payload}: SignInRequestActionT) {\n  try {\n    yield put(authAction.fetchSignInStart())\n    const apiCall = yield call(fetchRequest, authUrls.signIn, {\n      body: payload\n    })\n\n    if (!apiCall.ok) {\n      const apiData = yield apiCall.json()\n\n      toast.warn(apiData.message)\n      console.log(apiData.cookie)\n      yield put(authAction.signInFetchFailure(`${apiData.message}`))\n    } else {\n      console.log(apiCall.headers.get('Authorization'))\n      console.log(Cookies.get('Authorization'))\n      const apiData = yield apiCall.json()\n\n      Cookies.set('authCookie', apiData.cookie)\n      yield put(authAction.signInFetchSuccess(apiData.data))\n    }\n  } catch (err) {\n    toast.error('🔥LOGIN ERROR * signInFetch * 🔥')\n    yield put(authAction.signInFetchFailure('LOGIN ERROR'))\n  }\n}\nfunction* signUpFetch({payload}: SignUpRequestActionT) {\n  try {\n    console.log('up')\n    yield put(authAction.fetchSignInStart())\n\n    const res = {\n      status: 'Success',\n      data: {fullName: 'George', email: 'email'}\n    }\n    console.log(payload)\n\n    yield put(authAction.signInFetchSuccess(res.data))\n\n    // if (res.error) {\n    //   yield put(fetchError(res.error))\n    // } else {\n    //   yield put(fetchSuccess(res))\n    // }\n  } catch (err) {\n    console.log(err)\n    yield put(authAction.signInFetchFailure(err))\n  }\n}\nfunction* googleSignFetch() {\n  try {\n    console.log('googleSign')\n    yield put(authAction.fetchSignInStart())\n\n    const res = {\n      status: 'Success',\n      data: {fullName: 'George', email: 'email'}\n    }\n\n    yield put(authAction.signInFetchSuccess(res.data))\n\n    // if (res.error) {\n    //   yield put(fetchError(res.error))\n    // } else {\n    //   yield put(fetchSuccess(res))\n    // }\n  } catch (err) {\n    console.log(err)\n    yield put(authAction.signInFetchFailure(err))\n  }\n}\n\n/**\n * Watchers\n */\nfunction* watchSignInFetch() {\n  yield takeEvery(SignInTypes.signInSaga, signInFetch)\n}\nfunction* watchSignUpFetch() {\n  yield takeEvery(SignInTypes.signUpSaga, signUpFetch)\n}\nfunction* watchGoogleSign() {\n  yield takeEvery(SignInTypes.googleSignSaga, googleSignFetch)\n}\n\nexport function* authSaga() {\n  yield all([fork(watchSignInFetch), fork(watchSignUpFetch), fork(watchGoogleSign)])\n}\n","import {Reducer} from 'redux'\n\nimport {SignInTypes} from './types'\nimport {IAuthStore} from '../../interfaces/Store'\n\nexport const initialState: IAuthStore = {\n  isAuth: false,\n  isFetch: false,\n  email: '',\n  profile: {\n    fullName: ''\n  }\n}\n\nexport const $authReducer: Reducer<IAuthStore> = (state = initialState, action) => {\n  switch (action.type) {\n    case SignInTypes.start: {\n      return {...state, isFetch: true}\n    }\n    case SignInTypes.success: {\n      return {\n        isAuth: true,\n        isFetch: false,\n        email: action.payload.email,\n        profile: action.payload.profile,\n        login: action.payload.login || ''\n      }\n    }\n    case SignInTypes.failure: {\n      return {\n        ...state,\n        isAuth: false,\n        isFetch: false,\n        errors: action.payload\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import {all, fork} from 'redux-saga/effects'\n\nimport {authSaga} from './auth'\n\nexport default function* rootSaga() {\n  yield all([fork(authSaga)])\n}\n","import {Store, createStore, applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from './rootSaga'\nimport rootReducer from './rootReducer'\nimport {IStore} from '../interfaces/Store'\n\nfunction configureStore(): Store<IStore> {\n  const sagaMiddleware = createSagaMiddleware()\n  const composeEnhancers = composeWithDevTools({})\n  const initStore = createStore(rootReducer(), composeEnhancers(applyMiddleware(sagaMiddleware)))\n\n  sagaMiddleware.run(rootSaga)\n  return initStore\n}\n\nexport const store = configureStore()\n","import {combineReducers} from 'redux'\n\nimport {$authReducer} from './auth'\n\nexport default function rootReducer() {\n  return combineReducers({\n    $authReducer\n  })\n}\n","import CodeIcon from '@material-ui/icons/Code'\nimport HomeIcon from '@material-ui/icons/Home'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport SettingsIcon from '@material-ui/icons/Settings'\n\nimport {ILink} from '../interfaces/Router'\n\n/**\n * Links\n */\nconst code: ILink = {\n  to: '/code',\n  text: 'code',\n  Icon: CodeIcon\n}\nconst home: ILink = {\n  to: '/home',\n  text: 'home',\n  Icon: HomeIcon\n}\nconst gitHub: ILink = {\n  to: '/gitHub',\n  text: 'gitHub',\n  Icon: GitHubIcon\n}\nconst settings: ILink = {\n  to: '/settings',\n  text: 'settings',\n  Icon: SettingsIcon\n}\n\n/**\n * Drawers Links\n */\nexport const publicLinks: ILink[] = [home, gitHub, code]\nexport const privateLinks: ILink[] = [settings]\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useDrawerLinkS = makeStyles((theme: Theme) => ({\n  root: {\n    '&:hover': {\n      background: theme.palette.secondary.light\n    }\n  },\n  icon: {\n    opacity: 0.9,\n    fill: '#fff',\n    fontSize: '1.5em',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '2em'\n    }\n  }\n}))\n","import React, {FC, Ref, forwardRef} from 'react'\nimport {Link, LinkProps} from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport {useDrawerLinkS as useStyle} from './themes'\nimport {ILink} from '../../../interfaces/Router'\n\nexport const MenuDrawerLink: FC<ILink> = ({text, to, Icon, onClick}) => {\n  const classes = useStyle()\n\n  const forward: LinkProps['component'] = forwardRef((props, ref: Ref<HTMLDivElement>) => (\n    <Link ref={ref} {...props} />\n  ))\n\n  return (\n    <ListItem button to={to} component={forward} className={classes.root} onClick={onClick}>\n      <ListItemIcon>\n        <Icon className={classes.icon} />\n      </ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  )\n}\n","import {makeStyles, Theme} from '@material-ui/core/styles'\n\nconst drawerWidth = 240\nexport const useDrawerS = makeStyles((theme: Theme) => ({\n  paper: {\n    width: '100%',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow:\n      '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)'\n  },\n  list: {\n    position: 'relative',\n    marginTop: theme.spacing(7),\n    '& a': {\n      paddingLeft: theme.spacing(2)\n    }\n  },\n  drawer: {\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerClose: {\n    width: 0,\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    /**\n     * up SM\n     */\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(7)\n    }\n  },\n  drawerOpen: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    /**\n     * up SM\n     */\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth\n    }\n  }\n}))\n","import React, {FC} from 'react'\nimport {useSelector} from 'react-redux'\nimport List from '@material-ui/core/List'\nimport DrawerMui from '@material-ui/core/Drawer'\nimport clsx from 'clsx'\n\nimport {MenuDrawerLink} from '../../atoms/Links'\nimport {useDrawerS as useStyle} from './themes'\nimport {publicLinks, privateLinks} from '../../../router'\nimport {IStore} from '../../../interfaces/Store'\nimport {IIDrawer} from './ts'\n\nexport const Drawer: FC<IIDrawer> = ({isShow, hideDrawer}) => {\n  const classes = useStyle()\n  const $isAuth = useSelector((state: IStore) => state.$authReducer.isAuth)\n\n  const clsxNames = {\n    drawer: clsx(classes.drawer, {\n      [classes.drawerOpen]: isShow,\n      [classes.drawerClose]: !isShow\n    }),\n    classes: {\n      paper: clsx(classes.paper, {\n        [classes.drawerOpen]: isShow,\n        [classes.drawerClose]: !isShow\n      })\n    }\n  }\n\n  console.log($isAuth)\n\n  return (\n    <DrawerMui variant=\"permanent\" className={clsxNames.drawer} classes={clsxNames.classes}>\n      <List className={classes.list}>\n        {publicLinks.map((linkProps, index) => (\n          <MenuDrawerLink key={index} {...linkProps} onClick={hideDrawer} />\n        ))}\n        {$isAuth &&\n          privateLinks.map((linkProps, index) => (\n            <MenuDrawerLink key={index} {...linkProps} onClick={hideDrawer} />\n          ))}\n      </List>\n    </DrawerMui>\n  )\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useAppBarS = makeStyles((theme: Theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  }\n}))\n","import styled from 'styled-components'\nimport {only} from 'styled-breakpoints'\nimport Toolbar from '@material-ui/core/Toolbar'\n\nexport const ToolbarStyled = styled(Toolbar)`\n  padding: 0;\n  min-height: 40px;\n  max-height: 40px;\n\n  .logo {\n    left: 0;\n    position: absolute;\n\n    img {\n      width: 33px;\n      height: 33px;\n    }\n  }\n  .left {\n    margin-left: 175px;\n    /* ONLY XS */\n    ${only('xs')} {\n      display: none;\n    }\n  }\n  .btnGroup {\n    right: 0;\n    position: absolute;\n  }\n\n  .MuiSvgIcon-root {\n    fill: #fff;\n  }\n  .MuiButtonBase-root:hover {\n    background-color: transparent;\n  }\n`\n","const logoPng = '/assets/img/githubLogo.png'\nconst googleIcon = '/assets/svg/google.svg'\nconst githubIcon = '/assets/svg/github.svg'\nconst linkedinIcon = '/assets/svg/linkedin.svg'\nconst facebookIcon = '/assets/svg/facebook.svg'\n\nexport const imgPath = {\n  logoPng,\n  googleIcon,\n  githubIcon,\n  linkedinIcon,\n  facebookIcon\n}\n","import React, {FC} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport AppBarMui from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport clsx from 'clsx'\n\nimport {ToolbarStyled, useAppBarS as useStyle} from './themes'\nimport {imgPath} from '../../../constants'\nimport {IAppBar} from './ts'\n\nexport const AppBar: FC<IAppBar> = ({isShow, showDrawer, hideDrawer}) => {\n  const classes = useStyle()\n  const history = useHistory()\n\n  const goToAuth = () => {\n    history.push('/login')\n    hideDrawer()\n  }\n  const handleClickLink = () => {\n    isShow ? hideDrawer() : showDrawer()\n  }\n\n  return (\n    <AppBarMui position=\"fixed\" className={clsx(classes.appBar, {[classes.appBarShift]: isShow})}>\n      <ToolbarStyled>\n        <IconButton className=\"logo\" aria-label=\"open drawer\" onClick={handleClickLink}>\n          <img src={imgPath.logoPng} alt=\"logo\" />\n        </IconButton>\n        {isShow && (\n          <IconButton className=\"left\" aria-label=\"hide drawer\" onClick={hideDrawer}>\n            <ChevronLeft />\n          </IconButton>\n        )}\n        <div className=\"btnGroup\">\n          <IconButton aria-label=\"open account\" onClick={goToAuth}>\n            <ExitToAppIcon />\n          </IconButton>\n        </div>\n      </ToolbarStyled>\n    </AppBarMui>\n  )\n}\n","import {makeStyles, Theme} from '@material-ui/core/styles'\n\nexport const useAppLayoutS = makeStyles((theme: Theme) => ({\n  paper: {\n    height: '100vh',\n    backgroundSize: 'cover',\n    backgroundImage: `url(/assets/img/githubBg.jpg)`,\n    '& .content': {\n      display: 'flex',\n      padding: theme.spacing(10, 2, 0, 9)\n    }\n  }\n}))\n","import React, {FC, useState} from 'react'\nimport Paper from '@material-ui/core/Paper'\n\nimport {AppBar, Drawer} from '../../organisms'\nimport {useAppLayoutS as useStyle} from './themes'\n\nexport const AppLayout: FC = ({children}) => {\n  const classes = useStyle()\n\n  const [isShowDrawer, setShowDrawer] = useState(false)\n\n  const showDrawer = () => {\n    setShowDrawer(true)\n  }\n  const hideDrawer = () => {\n    setShowDrawer(false)\n  }\n\n  /** render **/\n  return (\n    <Paper className={classes.paper}>\n      <AppBar isShow={isShowDrawer} showDrawer={showDrawer} hideDrawer={hideDrawer} />\n      <Drawer isShow={isShowDrawer} hideDrawer={hideDrawer} />\n      <div className=\"content\" children={children} />\n    </Paper>\n  )\n}\n","export const authSendButtonS = {\n  marginTop: 15\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useAuthFormStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 300,\n    color: '#000',\n    maxWidth: 330,\n    display: 'flex',\n    borderRadius: 15,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    padding: '10px 20px 20px',\n    boxShadow: theme.shadows[1],\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: theme.zIndex.drawer + 1\n  }\n}))\n","import styled from 'styled-components'\n\nexport const IconSocialStyled = styled.svg<{src: string}>`\n  width: 50px;\n  height: 50px;\n  display: block;\n  cursor: pointer;\n  background-size: 75%;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-image: url(${({src}) => src});\n`\n","import styled from 'styled-components'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const ButtonCloseStyled = styled(IconButton)`\n  top: 0;\n  right: 0;\n  margin: 0;\n  position: absolute;\n`\n\nexport const AvatarStyled = styled(Avatar)`\n  margin-bottom: 15px;\n  background-color: #dd4b39;\n`\n\nexport const BarButtonsStyled = styled.div`\n  display: flex;\n\n  .isAccountText:hover {\n    cursor: pointer;\n  }\n`\n","const name = {\n  id: 'name',\n  name: 'name',\n  label: 'Имя',\n  required: true\n}\nconst email = {\n  id: 'email',\n  name: 'email',\n  label: 'Почта',\n  required: true,\n  fullWidth: true\n}\nconst login = {\n  id: 'login',\n  name: 'login',\n  label: 'Логин или почта',\n  required: true,\n  fullWidth: true\n}\nconst lastName = {\n  id: 'lastName',\n  name: 'lastName',\n  label: 'Фамилия'\n}\nconst username = {\n  id: 'login',\n  name: 'login',\n  label: 'Логин',\n  fullWidth: true\n}\nconst password = {\n  id: 'password',\n  name: 'password',\n  label: 'Пароль',\n  type: 'password',\n  required: true,\n  fullWidth: true\n}\nconst repeatPassword = {\n  id: 'repeatPassword',\n  name: 'repeatPassword',\n  label: 'Повторите пароль',\n  type: 'password',\n  required: true,\n  fullWidth: true\n}\n\n/**\n * Fields\n */\nexport const signInFields = [login, password]\nexport const signUpFields = [email, username, name, lastName, password, repeatPassword]\n\n/**\n * States\n */\nexport const signInState = {\n  login: '',\n  password: ''\n}\nexport const signUpState = {\n  name: '',\n  login: '',\n  email: '',\n  lastName: '',\n  password: '',\n  repeatPassword: ''\n}\n/**\n * Texts\n */\nexport const signInText = {\n  button: 'Войти!',\n  goTo: 'Зарегистриирваться!',\n  isHaveAccount: 'Нет аккаунта? '\n}\nexport const signUpText = {\n  goTo: 'Войти!',\n  button: 'Зарегистриирваться!',\n  isHaveAccount: 'Есть аккаунт? '\n}\n","import React, {FC, ChangeEvent, useEffect, useState} from 'react'\nimport {useDispatch} from 'react-redux'\n\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\n\nimport {authSendButtonS} from './themes'\nimport {signInState, signUpState, signInFields, signUpFields} from './config/auth'\nimport {signInFetchSaga, signUpFetchSaga} from '../../../store/auth'\nimport {ISignInPayload, ISignUpPayload} from '../../../interfaces/Store'\nimport {IAuthForm} from './ts'\n\nexport const AuthForm: FC<IAuthForm> = ({isSignIn, textButton}) => {\n  const dispatch = useDispatch()\n\n  const [key, setKey] = useState(1)\n  const [fields, setFields] = useState(isSignIn ? signInFields : signUpFields)\n  const [fieldsState, setFieldsState] = useState(isSignIn ? signInState : signUpState)\n\n  const handleFieldChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: {value, name}\n    } = event\n\n    setFieldsState((prevState) => ({...prevState, [name]: value}))\n  }\n  const handleSendForm = () => {\n    isSignIn\n      ? dispatch(signInFetchSaga(fieldsState as ISignInPayload))\n      : dispatch(signUpFetchSaga(fieldsState as ISignUpPayload))\n  }\n\n  useEffect(() => {\n    setKey(key + 1)\n    setFieldsState(isSignIn ? signInState : signUpState)\n    setFields(isSignIn ? signInFields : signUpFields)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSignIn])\n\n  return (\n    <form noValidate>\n      <Grid container spacing={2} key={key}>\n        {fields.map(({id, type, label, name, required, fullWidth}: TextFieldProps) => (\n          <Grid item xs={12} sm={!fullWidth && 6} key={id}>\n            <TextField\n              fullWidth\n              id={id}\n              name={name}\n              type={type}\n              label={label}\n              variant=\"outlined\"\n              required={required}\n              autoComplete={type}\n              onChange={handleFieldChange}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <Button\n        fullWidth\n        color=\"primary\"\n        variant=\"contained\"\n        children={textButton}\n        style={authSendButtonS}\n        onClick={handleSendForm}\n      />\n    </form>\n  )\n}\n","import React, {FC, useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\n\nimport CloseIcon from '@material-ui/icons/Close'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\nimport {AuthForm} from './AuthForm'\nimport {\n  AvatarStyled,\n  BarButtonsStyled,\n  IconSocialStyled,\n  ButtonCloseStyled,\n  useAuthFormStyles as useStyles\n} from './themes'\n\nimport {imgPath} from '../../../constants'\nimport {signInText, signUpText} from './config/auth'\nimport {googleSignSaga} from '../../../store/auth'\nimport {IAuthLayout} from './ts'\n\nexport const AuthLayout: FC<IAuthLayout> = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const [isSignIn, setIsSignIn] = useState(true)\n  const [texts, setTexts] = useState(isSignIn ? signInText : signUpText)\n\n  const handleGoogleAuth = () => {\n    dispatch(googleSignSaga())\n  }\n  const handleClickClose = () => {\n    history.push('/')\n  }\n  const handleToggleSignIn = () => {\n    setIsSignIn(!isSignIn)\n  }\n\n  useEffect(() => {\n    setTexts(isSignIn ? signInText : signUpText)\n  }, [isSignIn])\n\n  return (\n    <Container component=\"main\" className={classes.root}>\n      <ButtonCloseStyled onClick={handleClickClose}>\n        <CloseIcon />\n      </ButtonCloseStyled>\n      <AvatarStyled>\n        <LockOutlinedIcon />\n      </AvatarStyled>\n      <AuthForm isSignIn={isSignIn} textButton={texts.button} />\n      <IconSocialStyled src={imgPath.googleIcon} onClick={handleGoogleAuth} />\n      <BarButtonsStyled>\n        <Typography component=\"span\" variant=\"subtitle2\">\n          {texts.isHaveAccount}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          component=\"span\"\n          variant=\"subtitle2\"\n          className=\"isAccountText\"\n          onClick={handleToggleSignIn}>\n          {texts.goTo}\n        </Typography>\n      </BarButtonsStyled>\n    </Container>\n  )\n}\n","import React, {FC} from 'react'\n\nimport {AuthLayout} from '../components/layouts'\n\nexport const Login: FC = () => {\n  /** render **/\n  return (\n    <section>\n      <h5>Login</h5>\n      <AuthLayout />\n    </section>\n  )\n}\n","import * as Pages from '../pages'\nimport {RouteProps} from 'react-router-dom'\nimport {IPrivateRouteProps} from '../interfaces/Router'\n\nconst publicRoutes: RouteProps[] = [\n  {path: '/', exact: true, component: Pages.Home},\n  {path: '/github', component: Pages.Github},\n  {path: '/code', component: Pages.Code}\n]\nconst privateRoutes: IPrivateRouteProps[] = [\n  {path: '/settings', redirectPath: '/login', component: Pages.Settings},\n  {path: '/profile', redirectPath: '/login', component: Pages.Profile}\n]\n\nexport default {\n  publicRoutes,\n  privateRoutes\n}\n","import React, {FC} from 'react'\n\nexport const Home: FC = () => {\n  /** render **/\n  return (\n    <section>\n      <h5>Home</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Github: FC = () => {\n  /** render **/\n  return (\n    <section>\n      <h5>Github</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Code: FC = () => {\n  /** render **/\n  return (\n    <section>\n      <h5>Code</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Settings: FC = () => {\n  return (\n    <section>\n      <h5>Settings</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Profile: FC = () => {\n  /** render **/\n  return <div>Profile</div>\n}\n","import React, {FC} from 'react'\nimport {Redirect, Route} from 'react-router'\nimport {IPrivateRouteProps} from '../interfaces/Router'\n\nexport const PrivateRoute: FC<IPrivateRouteProps & {isAuth: boolean}> = ({\n  isAuth,\n  children,\n  ...props\n}) => (isAuth ? <Route {...props} /> : <Redirect to={{pathname: props.redirectPath}} />)\n","import React, {FC} from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\n\nimport routes from './routes'\nimport {Login} from '../pages'\nimport {PrivateRoute} from './PrivateRoute'\nimport {AppLayout} from '../components/layouts'\nimport {IStore} from '../interfaces/Store'\n\nexport const RootRouter: FC = () => {\n  const $isAuth = useSelector((state: IStore) => state.$authReducer.isAuth)\n\n  const {publicRoutes, privateRoutes} = routes\n  const redirectPath = {pathname: publicRoutes[0].path as string}\n\n  /** render **/\n  return (\n    <AppLayout>\n      <Switch>\n        <PrivateRoute redirectPath=\"/\" path=\"/login\" isAuth={!$isAuth} component={Login} />\n        {publicRoutes.map((route) => (\n          <Route {...route} key={route.path as string} />\n        ))}\n        {privateRoutes.map((route) => (\n          <PrivateRoute {...route} isAuth={$isAuth} key={route.path as string} />\n        ))}\n        <Redirect from=\"*\" to={redirectPath} />\n      </Switch>\n    </AppLayout>\n  )\n}\n","/**\n * Colors\n */\nconst colors = {\n  primary: '#465534'\n}\n\n/**\n * Breakpoints\n */\nconst breakpoints = {\n  xs: '375px',\n  sm: '600px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px'\n}\n\n/**\n * Theme\n */\nexport const StyledTheme = {\n  colors,\n  breakpoints\n}\n","import {createGlobalStyle} from 'styled-components'\n\nexport const GlobalStyled = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  li {\n    list-style: none;\n  }\n  input, select { \n    font-size: 100%;\n  }\n  \n  .Toastify__toast-container {\n    top: 0;\n    right: 0;\n    \n    .Toastify__toast--warning {\n      border-radius: 15px;\n      text-align: center;\n    }\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n`\n","import {createMuiTheme} from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\n\nexport const MuiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#7a682a',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: '#ea7d7d',\n      light: 'rgb(192, 107, 82)'\n    },\n    error: {main: red[400], dark: red[700]}\n  },\n  breakpoints: {\n    keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n    values: {xs: 375, sm: 600, md: 768, lg: 1024, xl: 1440}\n  }\n})\n","import React from 'react'\nimport {Provider} from 'react-redux'\nimport {BrowserRouter} from 'react-router-dom'\nimport {ThemeProvider} from 'styled-components'\nimport {ToastContainer, Flip} from 'react-toastify'\nimport {ThemeProvider as MuiProvider} from '@material-ui/core/styles'\n\nimport {store} from '../store'\nimport {RootRouter} from '../router'\nimport {StyledTheme, MuiTheme, GlobalStyled} from '../styles/themes'\n\nimport '../styles/scss/index.scss'\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={StyledTheme}>\n        <MuiProvider theme={MuiTheme}>\n          <BrowserRouter>\n            <RootRouter />\n          </BrowserRouter>\n        </MuiProvider>\n      </ThemeProvider>\n      <GlobalStyled />\n      <ToastContainer newestOnTop hideProgressBar autoClose={3000} transition={Flip} />\n    </Provider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {StrictMode} from 'react'\nimport {render} from 'react-dom'\n\nimport App from './app'\nimport * as serviceWorker from './services/serviceWorker'\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}