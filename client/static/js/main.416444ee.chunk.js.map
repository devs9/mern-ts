{"version":3,"sources":["router/links.ts","services/googleAuth.ts","components/layouts/forms/themes/StyleSheet.ts","components/layouts/forms/themes/useAuthFormS.ts","components/layouts/forms/themes/IconSochialStyled.ts","components/layouts/forms/themes/AuthComponentsStyled.ts","store/auth/types.ts","components/layouts/forms/config/auth/authFields.ts","store/auth/actions.ts","api/requests/googleApiCall.ts","api/urls.ts","api/fetchRequest.ts","store/auth/sagas.ts","store/auth/reducer.ts","components/layouts/forms/AuthForm.tsx","constants/paths.ts","components/layouts/forms/AuthLayoutForm.tsx","pages/Login.tsx","router/routes.ts","pages/Home.tsx","pages/Github.tsx","pages/Code.tsx","pages/Settings.tsx","pages/Profile.tsx","router/PrivateRoute.tsx","router/RootRouter.tsx","components/atoms/Links/themes/useDrawerLinkS.ts","components/atoms/Links/MenuDrawerLink.tsx","components/organisms/Drawer/themes/useDrawerS.ts","components/organisms/Drawer/Drawer.tsx","components/atoms/Buttons/themes/useUserImgBtnS.ts","components/atoms/Buttons/UserImgBtn.tsx","components/organisms/Menus/AccountMenu.tsx","components/organisms/Toolbar/themes/useAppBarS.ts","components/organisms/Toolbar/themes/ToolbarStyled.ts","components/organisms/Toolbar/AppBar.tsx","app/App.tsx","store/rootSaga.ts","store/configureStore.ts","store/rootReducer.ts","styles/themes/StyledTheme.ts","styles/themes/GlobalStyled.ts","styles/themes/MaterialTheme.ts","services/serviceWorker.ts","index.tsx"],"names":["code","to","text","Icon","CodeIcon","home","HomeIcon","gitHub","GitHubIcon","settings","SettingsIcon","publicLinks","privateLinks","onLoadScript","window","gapi","load","auth2","init","client_id","process","googleAuthInit","script","document","createElement","src","async","defer","onload","head","appendChild","googleAuth","authSendButtonS","marginTop","useAuthFormStyles","makeStyles","theme","root","width","color","maxWidth","display","borderRadius","position","alignItems","flexDirection","backgroundColor","padding","boxShadow","shadows","top","spacing","right","zIndex","drawer","IconSocialStyled","styled","svg","authTypes","ButtonCloseStyled","IconButton","AvatarStyled","Avatar","BarButtonsStyled","div","password","id","name","label","type","required","fullWidth","signInFields","signUpFields","signInState","login","signUpState","email","lastName","repeatPassword","signInText","button","goTo","isHaveAccount","signUpText","signInStart","start","signInSuccess","payload","success","signInFailure","failure","googleSignIn","a","getAuthInstance","signIn","googleUser","profile","getBasicProfile","idtToken","getAuthResponse","console","log","googleToken","googleId","getId","image","getImageUrl","fullName","getName","getEmail","toast","error","AUTH_API","ROOT_API","authUrls","signUp","google","fetchRequest","url","requestInit","fetch","credentials","method","body","JSON","stringify","headers","googleSaga","signInSaga","signUpSaga","loginWatcher","authWatcher","authSaga","call","apiCall","ok","json","apiData","put","authAction","data","Cookies","set","token","warn","message","pickBy","identity","takeLatest","takeEvery","all","fork","initialState","isAuth","isFetch","$authReducer","state","action","logout","errors","AuthForm","isSignIn","textButton","dispatch","useDispatch","useState","key","setKey","fields","setFields","fieldsState","setFieldsState","handleFieldChange","event","target","value","prevState","useEffect","noValidate","Grid","container","map","item","xs","sm","TextField","variant","autoComplete","onChange","Button","children","style","onClick","imgPath","AuthLayout","classes","useStyles","history","useHistory","setIsSignIn","texts","setTexts","Container","component","className","push","Typography","Login","publicRoutes","path","exact","privateRoutes","redirectPath","PrivateRoute","props","pathname","RootRouter","$isAuth","useSelector","routes","route","from","useDrawerLinkS","background","palette","secondary","light","icon","opacity","fill","fontSize","breakpoints","down","MenuDrawerLink","useStyle","forward","forwardRef","ref","ListItem","ListItemIcon","ListItemText","primary","useDrawerS","paper","main","list","paddingLeft","flexShrink","whiteSpace","drawerClose","overflowX","transition","transitions","create","easing","sharp","duration","leavingScreen","up","drawerOpen","enteringScreen","Drawer","isShow","hideDrawer","clsxNames","clsx","List","linkProps","index","useUserImgBtnS","paddingRight","img","circle","UserImgBtn","userImg","aria-haspopup","aria-controls","alt","AccountMenu","$auth","anchorEl","setAnchorEl","handleClose","currentTarget","Menu","keepMounted","onClose","open","Boolean","MenuItem","remove","aria-label","useAppBarS","appBar","appBarShift","useAppLayoutS","height","backgroundSize","backgroundImage","ToolbarStyled","Toolbar","only","AppBar","showDrawer","App","isShowDrawer","setShowDrawer","Cookie","get","Paper","rootSaga","configureStore","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","initStore","createStore","combineReducers","applyMiddleware","run","StyledTheme","colors","md","lg","xl","GlobalStyled","createGlobalStyle","MuiTheme","createMuiTheme","contrastText","red","dark","keys","values","location","hostname","match","render","store","newestOnTop","hideProgressBar","autoClose","Flip","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.416444ee.chunk.js","sourcesContent":["import CodeIcon from '@material-ui/icons/Code'\nimport HomeIcon from '@material-ui/icons/Home'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport SettingsIcon from '@material-ui/icons/Settings'\n\nimport {ILink} from '../interfaces/Router'\n\n/**\n * Links\n */\nconst code: ILink = {\n  to: '/code',\n  text: 'code',\n  Icon: CodeIcon\n}\nconst home: ILink = {\n  to: '/home',\n  text: 'home',\n  Icon: HomeIcon\n}\nconst gitHub: ILink = {\n  to: '/gitHub',\n  text: 'gitHub',\n  Icon: GitHubIcon\n}\nconst settings: ILink = {\n  to: '/settings',\n  text: 'settings',\n  Icon: SettingsIcon\n}\n\n/**\n * Drawers Links\n */\nexport const publicLinks: ILink[] = [home, gitHub, code]\nexport const privateLinks: ILink[] = [settings]\n","const onLoadScript = () => {\n  window.gapi.load('auth2', () =>\n    gapi.auth2.init({client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID})\n  )\n}\n\nconst googleAuth = () => {\n  const script = document.createElement('script')\n\n  script.src = 'https://apis.google.com/js/platform.js'\n  script.async = true\n  script.defer = true\n  script.onload = onLoadScript\n\n  document.head.appendChild(script)\n}\n\nexport function googleAuthInit() {\n  const {gapi} = window\n\n  gapi ? onLoadScript() : googleAuth()\n}\n","export const authSendButtonS = {\n  marginTop: 15\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useAuthFormStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 300,\n    color: '#000',\n    maxWidth: 330,\n    display: 'flex',\n    borderRadius: 15,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    padding: '10px 20px 20px',\n    boxShadow: theme.shadows[1],\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: theme.zIndex.drawer + 1\n  }\n}))\n","import styled from 'styled-components'\n\nexport const IconSocialStyled = styled.svg<{src: string}>`\n  width: 50px;\n  height: 50px;\n  display: block;\n  cursor: pointer;\n  background-size: 75%;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-image: url(${({src}) => src});\n`\n","import styled from 'styled-components'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const ButtonCloseStyled = styled(IconButton)`\n  top: 0;\n  right: 0;\n  margin: 0;\n  position: absolute;\n`\n\nexport const AvatarStyled = styled(Avatar)`\n  margin-bottom: 15px;\n  background-color: #dd4b39;\n`\n\nexport const BarButtonsStyled = styled.div`\n  display: flex;\n\n  .isAccountText:hover {\n    cursor: pointer;\n  }\n`\n","export enum authTypes {\n  logout = '@@Auth/LOGOUT',\n  login = '@@Auth/SIGN_IN_LOGIN',\n\n  start = '@@Auth/SIGN_IN_FETCH_START',\n  success = '@@Auth/SIGN_IN_FETCH_SUCCESS',\n  failure = '@@Auth/SIGN_IN_FETCH_FAILURE',\n\n  signInSaga = '@@Auth/SIGN_IN_FETCH_SAGA',\n  signUpSaga = '@@Auth/SIGN_UP_FETCH_SAGA',\n  googleSaga = '@@Auth/GOOGLE_AUTH_SAGA'\n}\n","const name = {\n  id: 'name',\n  name: 'name',\n  label: 'Имя',\n  required: true\n}\nconst email = {\n  id: 'email',\n  name: 'email',\n  label: 'Почта',\n  required: true,\n  fullWidth: true\n}\nconst login = {\n  id: 'login',\n  name: 'login',\n  label: 'Логин или почта',\n  required: true,\n  fullWidth: true\n}\nconst lastName = {\n  id: 'lastName',\n  name: 'lastName',\n  label: 'Фамилия'\n}\nconst username = {\n  id: 'login',\n  name: 'login',\n  label: 'Логин',\n  fullWidth: true\n}\nconst password = {\n  id: 'password',\n  name: 'password',\n  label: 'Пароль',\n  type: 'password',\n  required: true,\n  fullWidth: true\n}\nconst repeatPassword = {\n  id: 'repeatPassword',\n  name: 'repeatPassword',\n  label: 'Повторите пароль',\n  type: 'password',\n  required: true,\n  fullWidth: true\n}\n\n/**\n * Fields\n */\nexport const signInFields = [login, password]\nexport const signUpFields = [email, username, name, lastName, password, repeatPassword]\n\n/**\n * States\n */\nexport const signInState = {\n  login: '',\n  password: ''\n}\nexport const signUpState = {\n  name: '',\n  login: '',\n  email: '',\n  lastName: '',\n  password: '',\n  repeatPassword: ''\n}\n/**\n * Texts\n */\nexport const signInText = {\n  button: 'Войти!',\n  goTo: 'Зарегистриирваться!',\n  isHaveAccount: 'Нет аккаунта? '\n}\nexport const signUpText = {\n  goTo: 'Войти!',\n  button: 'Зарегистриирваться!',\n  isHaveAccount: 'Есть аккаунт? '\n}\n","import {authTypes} from './types'\nimport {IErrors, ISignInPayload, ISignUpPayload, IProfile} from '../../interfaces/Store'\n\n/**\n * Simple Actions\n */\nexport const logout = () => ({type: authTypes.logout})\nexport const loginSaga = () => ({type: authTypes.login})\nexport const signInStart = () => ({type: authTypes.start})\nexport const signInSuccess = (payload: IProfile) => ({type: authTypes.success, payload})\nexport const signInFailure = (payload: IErrors) => ({type: authTypes.failure, payload})\n\n/**\n * Sagas Actions\n */\nexport const googleSaga = () => ({type: authTypes.googleSaga})\nexport const signInSaga = (payload: ISignInPayload) => ({type: authTypes.signInSaga, payload})\nexport const signUpSaga = (payload: ISignUpPayload) => ({type: authTypes.signUpSaga, payload})\n","import {toast} from 'react-toastify'\n\nexport const googleSignIn = async () => {\n  try {\n    const {gapi} = window\n    const googleUser = await gapi.auth2.getAuthInstance().signIn()\n    const profile = googleUser.getBasicProfile()\n    const idtToken = googleUser.getAuthResponse()\n    console.log(googleUser)\n\n    return {\n      googleToken: idtToken,\n      googleId: profile.getId(),\n      image: profile.getImageUrl(),\n      fullName: profile.getName(),\n      email: profile.getEmail()\n    }\n  } catch (error) {\n    toast.error(`googleSignIn Error! ${error}`)\n  }\n}\n","/**\n * Root Api\n */\nconst apiDev = 'http://localhost:7777'\nconst apiProd = 'http://localhost:7777' // 'https://devs9-kit-backend.herokuapp.com'\n\nexport const ROOT_API = process.env.NODE_ENV === 'production' ? apiProd : apiDev\n\n/**\n * Api Branches\n */\nconst AUTH_API = ROOT_API + '/api/auth'\n\n/**\n * Auth Api Urls\n */\nexport const authUrls = {\n  login: `${AUTH_API}/login`,\n  signIn: `${AUTH_API}/sign_in`,\n  signUp: `${AUTH_API}/sign_up`,\n  google: `${AUTH_API}/google`\n}\n","import {IFetchRequest} from '../react-app-env'\n\nexport const fetchRequest = async (url: string, requestInit: IFetchRequest) => {\n  try {\n    return await fetch(url, {\n      credentials: 'include',\n      method: requestInit.method || 'POST',\n      body: JSON.stringify(requestInit.body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  } catch (error) {\n    console.error(`🔥 REQUEST ERROR!`, error, '🔥')\n  }\n}\n","import {all, call, fork, put, takeEvery, takeLatest} from 'redux-saga/effects'\nimport {identity, pickBy} from 'lodash'\nimport {toast} from 'react-toastify'\nimport Cookies from 'js-cookie'\n\nimport {authTypes} from './types'\nimport * as authAction from './actions'\nimport {authUrls, fetchRequest, googleSignIn} from '../../api'\nimport {SignInRequestActionT, SignUpRequestActionT} from '../../interfaces/Store'\n\n/**\n * Sagas\n */\nfunction* login() {\n  try {\n    const apiCall = yield call(fetchRequest, authUrls.login, {\n      method: 'GET'\n    })\n\n    if (apiCall.ok) {\n      const apiData = yield apiCall.json()\n\n      yield put(authAction.signInSuccess(apiData.data))\n    }\n  } catch (error) {\n    yield put(authAction.signInFailure('LOGIN ERROR'))\n  }\n}\nfunction* googleSaga() {\n  try {\n    yield put(authAction.signInStart())\n\n    const googleUser = yield call(googleSignIn)\n    const apiCall = yield fetchRequest(authUrls.google, {body: googleUser})\n\n    console.log(googleUser)\n\n    if (apiCall?.ok) {\n      const apiData = yield apiCall.json()\n\n      Cookies.set('Authorization', apiData.token)\n      yield put(authAction.signInSuccess(apiData.data))\n    } else {\n      console.log('e')\n    }\n  } catch (err) {\n    console.log(err)\n    yield put(authAction.signInFailure(err))\n  }\n}\nfunction* signInSaga({payload}: SignInRequestActionT) {\n  try {\n    yield put(authAction.signInStart())\n    const apiCall = yield call(fetchRequest, authUrls.signIn, {\n      body: payload\n    })\n\n    if (!apiCall.ok) {\n      const apiData = yield apiCall.json()\n\n      toast.warn(apiData.message)\n      yield put(authAction.signInFailure(`${apiData.message}`))\n    } else {\n      const apiData = yield apiCall.json()\n\n      Cookies.set('Authorization', apiData.token)\n      yield put(authAction.signInSuccess(apiData.data))\n    }\n  } catch (err) {\n    toast.error('🔥LOGIN ERROR * signInFetch * 🔥')\n    yield put(authAction.signInFailure('LOGIN ERROR'))\n  }\n}\nfunction* signUpSaga({payload}: SignUpRequestActionT) {\n  try {\n    yield put(authAction.signInStart())\n\n    const apiCall = yield call(fetchRequest, authUrls.signUp, {\n      body: pickBy(payload, identity)\n    })\n    const apiData = yield apiCall.json()\n\n    if (!apiCall.ok) {\n      toast.warn(apiData.message)\n      yield put(authAction.signInFailure(`${apiData.message}`))\n    } else {\n      Cookies.set('Authorization', apiData.token)\n      yield put(authAction.signInSuccess(apiData.data))\n    }\n  } catch (err) {\n    console.log(err)\n    yield put(authAction.signInFailure(err))\n  }\n}\n\n/**\n * Watchers\n */\nfunction* loginWatcher() {\n  yield takeLatest(authTypes.login, login)\n}\nfunction* authWatcher() {\n  yield takeEvery(authTypes.signInSaga, signInSaga)\n  yield takeEvery(authTypes.signUpSaga, signUpSaga)\n  yield takeEvery(authTypes.googleSaga, googleSaga)\n}\n\nexport function* authSaga() {\n  yield all([fork(loginWatcher), fork(authWatcher)])\n}\n","import {Reducer} from 'redux'\n\nimport {authTypes} from './types'\nimport {IAuthStore} from '../../interfaces/Store'\n\nexport const initialState: IAuthStore = {\n  isAuth: false,\n  isFetch: false,\n  email: '',\n  profile: {\n    fullName: ''\n  }\n}\n\nexport const $authReducer: Reducer<IAuthStore> = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case authTypes.start: {\n      return {...state, isFetch: true}\n    }\n    case authTypes.logout: {\n      return initialState\n    }\n    case authTypes.success: {\n      return {\n        isAuth: true,\n        isFetch: false,\n        ...action.payload\n      }\n    }\n    case authTypes.failure: {\n      return {\n        ...state,\n        isAuth: false,\n        isFetch: false,\n        errors: action.payload\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import React, {FC, ChangeEvent, useEffect, useState} from 'react'\nimport {useDispatch} from 'react-redux'\n\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport TextField, {TextFieldProps} from '@material-ui/core/TextField'\n\nimport {authSendButtonS} from './themes'\nimport {signInState, signUpState, signInFields, signUpFields} from './config/auth'\nimport {signInSaga, signUpSaga} from '../../../store/auth'\nimport {ISignInPayload, ISignUpPayload} from '../../../interfaces/Store'\nimport {IAuthForm} from './ts'\n\nexport const AuthForm: FC<IAuthForm> = ({isSignIn, textButton}) => {\n  const dispatch = useDispatch()\n\n  const [key, setKey] = useState(1)\n  const [fields, setFields] = useState(isSignIn ? signInFields : signUpFields)\n  const [fieldsState, setFieldsState] = useState(isSignIn ? signInState : signUpState)\n\n  const handleFieldChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: {value, name}\n    } = event\n\n    setFieldsState((prevState) => ({...prevState, [name]: value}))\n  }\n  const handleSendForm = () => {\n    isSignIn\n      ? dispatch(signInSaga(fieldsState as ISignInPayload))\n      : dispatch(signUpSaga(fieldsState as ISignUpPayload))\n  }\n\n  useEffect(() => {\n    setKey(key + 1)\n    setFieldsState(isSignIn ? signInState : signUpState)\n    setFields(isSignIn ? signInFields : signUpFields)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSignIn])\n\n  return (\n    <form noValidate>\n      <Grid container spacing={2} key={key}>\n        {fields.map(({id, type, label, name, required, fullWidth}: TextFieldProps) => (\n          <Grid item xs={12} sm={!fullWidth && 6} key={id}>\n            <TextField\n              fullWidth\n              id={id}\n              name={name}\n              type={type}\n              label={label}\n              variant=\"outlined\"\n              required={required}\n              autoComplete={type}\n              onChange={handleFieldChange}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <Button\n        fullWidth\n        color=\"primary\"\n        variant=\"contained\"\n        children={textButton}\n        style={authSendButtonS}\n        onClick={handleSendForm}\n      />\n    </form>\n  )\n}\n","const logoPng = '/assets/img/githubLogo.png'\nconst googleIcon = '/assets/svg/google.svg'\nconst githubIcon = '/assets/svg/github.svg'\nconst linkedinIcon = '/assets/svg/linkedin.svg'\nconst facebookIcon = '/assets/svg/facebook.svg'\n\nexport const imgPath = {\n  logoPng,\n  googleIcon,\n  githubIcon,\n  linkedinIcon,\n  facebookIcon\n}\n","import React, {FC, useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\n\nimport CloseIcon from '@material-ui/icons/Close'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\n\nimport {AuthForm} from './AuthForm'\nimport {\n  AvatarStyled,\n  BarButtonsStyled,\n  IconSocialStyled,\n  ButtonCloseStyled,\n  useAuthFormStyles as useStyles\n} from './themes'\n\nimport {imgPath} from '../../../constants'\nimport {signInText, signUpText} from './config/auth'\nimport {googleSaga} from '../../../store/auth'\nimport {IAuthLayout} from './ts'\n\nexport const AuthLayout: FC<IAuthLayout> = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const [isSignIn, setIsSignIn] = useState(true)\n  const [texts, setTexts] = useState(isSignIn ? signInText : signUpText)\n\n  const handleGoogleAuth = () => {\n    dispatch(googleSaga())\n  }\n  const handleClickClose = () => {\n    history.push('/')\n  }\n  const handleToggleSignIn = () => {\n    setIsSignIn(!isSignIn)\n  }\n\n  useEffect(() => {\n    setTexts(isSignIn ? signInText : signUpText)\n  }, [isSignIn])\n\n  return (\n    <Container component=\"main\" className={classes.root}>\n      <ButtonCloseStyled onClick={handleClickClose}>\n        <CloseIcon />\n      </ButtonCloseStyled>\n      <AvatarStyled>\n        <LockOutlinedIcon />\n      </AvatarStyled>\n      <AuthForm isSignIn={isSignIn} textButton={texts.button} />\n      <IconSocialStyled src={imgPath.googleIcon} onClick={handleGoogleAuth} />\n      <BarButtonsStyled>\n        <Typography component=\"span\" variant=\"subtitle2\">\n          {texts.isHaveAccount}\n        </Typography>\n        <Typography\n          color=\"primary\"\n          component=\"span\"\n          variant=\"subtitle2\"\n          className=\"isAccountText\"\n          onClick={handleToggleSignIn}>\n          {texts.goTo}\n        </Typography>\n      </BarButtonsStyled>\n    </Container>\n  )\n}\n","import React, {FC, useEffect} from 'react'\n\nimport {googleAuthInit} from '../services'\nimport {AuthLayout} from '../components/layouts'\n\nexport const Login: FC = () => {\n  useEffect(() => {\n    googleAuthInit()\n  }, [])\n\n  return (\n    <section>\n      <h5>Login</h5>\n      <AuthLayout />\n    </section>\n  )\n}\n","import * as Pages from '../pages'\nimport {RouteProps} from 'react-router-dom'\nimport {IPrivateRouteProps} from '../interfaces/Router'\n\nconst publicRoutes: RouteProps[] = [\n  {path: '/', exact: true, component: Pages.Home},\n  {path: '/github', component: Pages.Github},\n  {path: '/code', component: Pages.Code}\n]\nconst privateRoutes: IPrivateRouteProps[] = [\n  {path: '/settings', redirectPath: '/login', component: Pages.Settings},\n  {path: '/profile', redirectPath: '/login', component: Pages.Profile}\n]\n\nexport default {\n  publicRoutes,\n  privateRoutes\n}\n","import React, {FC} from 'react'\n\nexport const Home: FC = () => {\n  return (\n    <section>\n      <h5>Home</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Github: FC = () => {\n  return (\n    <section>\n      <h5>Github</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Code: FC = () => {\n  return (\n    <section>\n      <h5>Code</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Settings: FC = () => {\n  return (\n    <section>\n      <h5>Settings</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\n\nexport const Profile: FC = () => {\n  return (\n    <section>\n      <h5>Profile</h5>\n    </section>\n  )\n}\n","import React, {FC} from 'react'\nimport {Redirect, Route} from 'react-router'\n\nimport {IPrivateRouteProps} from '../interfaces/Router'\n\nexport const PrivateRoute: FC<IPrivateRouteProps & {isAuth: boolean}> = ({\n  isAuth,\n  children,\n  ...props\n}) => (isAuth ? <Route {...props} /> : <Redirect to={{pathname: props.redirectPath}} />)\n","import React, {FC} from 'react'\nimport {useSelector} from 'react-redux'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport routes from './routes'\nimport {Login} from '../pages'\nimport {PrivateRoute} from './PrivateRoute'\nimport {IStore} from '../interfaces/Store'\n\nexport const RootRouter: FC = () => {\n  const $isAuth = useSelector((state: IStore) => state.$authReducer.isAuth)\n\n  const {publicRoutes, privateRoutes} = routes\n  const redirectPath = {pathname: publicRoutes[0].path as string}\n\n  return (\n    <Switch>\n      <PrivateRoute redirectPath=\"/\" path=\"/login\" isAuth={!$isAuth} component={Login} />\n      {publicRoutes.map((route) => (\n        <Route {...route} key={route.path as string} />\n      ))}\n      {privateRoutes.map((route) => (\n        <PrivateRoute {...route} isAuth={$isAuth} key={route.path as string} />\n      ))}\n      <Redirect from=\"*\" to={redirectPath} />\n    </Switch>\n  )\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useDrawerLinkS = makeStyles((theme: Theme) => ({\n  root: {\n    '&:hover': {\n      background: theme.palette.secondary.light\n    }\n  },\n  icon: {\n    opacity: 0.9,\n    fill: '#fff',\n    fontSize: '1.5em',\n    [theme.breakpoints.down('md')]: {\n      fontSize: '2em'\n    }\n  }\n}))\n","import React, {FC, Ref, forwardRef} from 'react'\nimport {Link, LinkProps} from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport {useDrawerLinkS as useStyle} from './themes'\nimport {ILink} from '../../../interfaces/Router'\n\nexport const MenuDrawerLink: FC<ILink> = ({text, to, Icon, onClick}) => {\n  const classes = useStyle()\n\n  const forward: LinkProps['component'] = forwardRef((props, ref: Ref<HTMLDivElement>) => (\n    <Link ref={ref} {...props} />\n  ))\n\n  return (\n    <ListItem button to={to} component={forward} className={classes.root} onClick={onClick}>\n      <ListItemIcon>\n        <Icon className={classes.icon} />\n      </ListItemIcon>\n      <ListItemText primary={text} />\n    </ListItem>\n  )\n}\n","import {makeStyles, Theme} from '@material-ui/core/styles'\n\nconst drawerWidth = 240\nexport const useDrawerS = makeStyles((theme: Theme) => ({\n  paper: {\n    width: '100%',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow:\n      '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)'\n  },\n  list: {\n    position: 'relative',\n    marginTop: theme.spacing(7),\n    '& a': {\n      paddingLeft: theme.spacing(2)\n    }\n  },\n  drawer: {\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerClose: {\n    width: 0,\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    /**\n     * up SM\n     */\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(7)\n    }\n  },\n  drawerOpen: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    /**\n     * up SM\n     */\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth\n    }\n  }\n}))\n","import React, {FC} from 'react'\nimport {useSelector} from 'react-redux'\nimport List from '@material-ui/core/List'\nimport DrawerMui from '@material-ui/core/Drawer'\nimport clsx from 'clsx'\n\nimport {MenuDrawerLink} from '../../atoms/Links'\nimport {useDrawerS as useStyle} from './themes'\nimport {publicLinks, privateLinks} from '../../../router'\nimport {IStore} from '../../../interfaces/Store'\nimport {IIDrawer} from './ts'\n\nexport const Drawer: FC<IIDrawer> = ({isShow, hideDrawer}) => {\n  const classes = useStyle()\n  const $isAuth = useSelector((state: IStore) => state.$authReducer.isAuth)\n\n  const clsxNames = {\n    drawer: clsx(classes.drawer, {\n      [classes.drawerOpen]: isShow,\n      [classes.drawerClose]: !isShow\n    }),\n    classes: {\n      paper: clsx(classes.paper, {\n        [classes.drawerOpen]: isShow,\n        [classes.drawerClose]: !isShow\n      })\n    }\n  }\n\n  return (\n    <DrawerMui variant=\"permanent\" className={clsxNames.drawer} classes={clsxNames.classes}>\n      <List className={classes.list}>\n        {publicLinks.map((linkProps, index) => (\n          <MenuDrawerLink key={index} {...linkProps} onClick={hideDrawer} />\n        ))}\n        {$isAuth &&\n          privateLinks.map((linkProps, index) => (\n            <MenuDrawerLink key={index} {...linkProps} onClick={hideDrawer} />\n          ))}\n      </List>\n    </DrawerMui>\n  )\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useUserImgBtnS = makeStyles((theme: Theme) => ({\n  root: {paddingRight: theme.spacing(2)},\n  img: {width: '1.4em', borderRadius: '50%'},\n  circle: {fontSize: '1.4em'}\n}))\n","import React, {FC} from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\n\nimport {useUserImgBtnS as useStyle} from './themes'\nimport {IUserImgBtn} from './ts'\n\nexport const UserImgBtn: FC<IUserImgBtn> = ({userImg, onClick}) => {\n  const classes = useStyle()\n\n  return (\n    <IconButton\n      onClick={onClick}\n      aria-haspopup=\"true\"\n      className={classes.root}\n      aria-controls=\"menu-appbar\">\n      {userImg ? (\n        <img src={userImg} className={classes.img} alt=\"appbar-logo\" />\n      ) : (\n        <AccountCircle className={classes.circle} />\n      )}\n    </IconButton>\n  )\n}\n","import React, {FC, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {useSelector, useDispatch} from 'react-redux'\nimport Cookies from 'js-cookie'\n\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport IconButton, {IconButtonProps} from '@material-ui/core/IconButton'\n\nimport {UserImgBtn} from '../../atoms/Buttons'\nimport {logout} from '../../../store/auth'\nimport {IStore} from '../../../interfaces/Store'\nimport {IAccountMenu} from './ts'\n\nexport const AccountMenu: FC<IAccountMenu> = ({hideDrawer}) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const $auth = useSelector((state: IStore) => state.$authReducer)\n\n  const [anchorEl, setAnchorEl] = useState()\n\n  const goToAuth = () => {\n    history.push('/login')\n    setAnchorEl(null)\n    hideDrawer()\n  }\n  const goToProfile = () => {\n    history.push('/profile')\n    handleClose()\n  }\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n  const handleLogout = () => {\n    Cookies.remove('Authorization', {path: ''})\n    dispatch(logout())\n    handleClose()\n  }\n  const handleMenuClick: IconButtonProps['onClick'] = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const {isAuth, profile} = $auth\n  const userImg = profile?.image\n\n  return (\n    <div className=\"btnGroup\">\n      {isAuth ? (\n        <div>\n          <UserImgBtn onClick={handleMenuClick} userImg={userImg} />\n          <Menu\n            keepMounted\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            open={Boolean(anchorEl)}>\n            <MenuItem onClick={goToProfile}>Profile</MenuItem>\n            <MenuItem onClick={handleLogout}>Exit</MenuItem>\n          </Menu>\n        </div>\n      ) : (\n        <IconButton aria-label=\"open account\" onClick={goToAuth}>\n          <ExitToAppIcon />\n        </IconButton>\n      )}\n    </div>\n  )\n}\n","import {Theme, makeStyles} from '@material-ui/core/styles'\n\nexport const useAppBarS = makeStyles((theme: Theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  }\n}))\n\nexport const useAppLayoutS = makeStyles({\n  paper: {\n    height: '100vh',\n    backgroundSize: 'cover',\n    backgroundImage: `url(/assets/img/githubBg.jpg)`\n  }\n})\n","import styled from 'styled-components'\nimport {only} from 'styled-breakpoints'\nimport Toolbar from '@material-ui/core/Toolbar'\n\nexport const ToolbarStyled = styled(Toolbar)`\n  padding: 0;\n  min-height: 40px;\n  max-height: 40px;\n\n  .logo {\n    left: 0;\n    padding-left: 10px;\n    position: absolute;\n\n    img {\n      width: 33px;\n      height: 33px;\n    }\n  }\n  .left {\n    margin-left: 175px;\n    /* ONLY XS */\n    ${only('xs')} {\n      display: none;\n    }\n  }\n  .btnGroup {\n    right: 0;\n    position: absolute;\n  }\n\n  .MuiSvgIcon-root {\n    fill: #fff;\n  }\n  .MuiButtonBase-root:hover {\n    background-color: transparent;\n  }\n`\n","import React, {FC} from 'react'\nimport AppBarMui from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport clsx from 'clsx'\n\nimport {AccountMenu} from '../Menus'\nimport {imgPath} from '../../../constants'\nimport {ToolbarStyled, useAppBarS as useStyle} from './themes'\nimport {IAppBar} from './ts'\n\nexport const AppBar: FC<IAppBar> = ({isShow, showDrawer, hideDrawer}) => {\n  const classes = useStyle()\n\n  const handleClickLink = () => {\n    isShow ? hideDrawer() : showDrawer()\n  }\n\n  return (\n    <AppBarMui position=\"fixed\" className={clsx(classes.appBar, {[classes.appBarShift]: isShow})}>\n      <ToolbarStyled>\n        <IconButton className=\"logo\" aria-label=\"open drawer\" onClick={handleClickLink}>\n          <img src={imgPath.logoPng} alt=\"logo\" />\n        </IconButton>\n        {isShow && (\n          <IconButton className=\"left\" aria-label=\"hide drawer\" onClick={hideDrawer}>\n            <ChevronLeft />\n          </IconButton>\n        )}\n        <AccountMenu hideDrawer={hideDrawer} />\n      </ToolbarStyled>\n    </AppBarMui>\n  )\n}\n","import React, {useEffect, useState} from 'react'\nimport {BrowserRouter} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\nimport Cookie from 'js-cookie'\nimport Paper from '@material-ui/core/Paper'\n\nimport {RootRouter} from '../router'\nimport {loginSaga} from '../store/auth'\nimport {Drawer, AppBar, useAppLayoutS} from '../components/organisms'\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const classes = useAppLayoutS()\n\n  const [isShowDrawer, setShowDrawer] = useState(false)\n\n  const showDrawer = () => {\n    setShowDrawer(true)\n  }\n  const hideDrawer = () => {\n    setShowDrawer(false)\n  }\n\n  useEffect(() => {\n    if (Cookie.get('Authorization')) {\n      dispatch(loginSaga())\n    }\n  }, [dispatch])\n\n  return (\n    <Paper className={classes.paper}>\n      <BrowserRouter>\n        <Drawer isShow={isShowDrawer} hideDrawer={hideDrawer} />\n        <AppBar isShow={isShowDrawer} showDrawer={showDrawer} hideDrawer={hideDrawer} />\n        <RootRouter />\n      </BrowserRouter>\n    </Paper>\n  )\n}\n","import {all, fork} from 'redux-saga/effects'\n\nimport {authSaga} from './auth'\n\nexport default function* rootSaga() {\n  yield all([fork(authSaga)])\n}\n","import {Store, createStore, applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from './rootSaga'\nimport rootReducer from './rootReducer'\nimport {IStore} from '../interfaces/Store'\n\nfunction configureStore(): Store<IStore> {\n  const sagaMiddleware = createSagaMiddleware()\n  const composeEnhancers = composeWithDevTools({})\n  const initStore = createStore(rootReducer(), composeEnhancers(applyMiddleware(sagaMiddleware)))\n\n  sagaMiddleware.run(rootSaga)\n  return initStore\n}\n\nexport default configureStore()\n","import {combineReducers} from 'redux'\n\nimport {$authReducer} from './auth'\n\nexport default function rootReducer() {\n  return combineReducers({\n    $authReducer\n  })\n}\n","/**\n * Colors\n */\nconst colors = {\n  primary: '#7a682a'\n}\n\n/**\n * Breakpoints\n */\nconst breakpoints = {\n  xs: '375px',\n  sm: '600px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px'\n}\n\n/**\n * Theme\n */\nexport const StyledTheme = {\n  colors,\n  breakpoints\n}\n","import {createGlobalStyle} from 'styled-components'\n\nexport const GlobalStyled = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  li {\n    list-style: none;\n  }\n  input, select { \n    font-size: 100%;\n  }\n  \n  .Toastify__toast-container {\n    top: 0;\n    right: 0;\n    \n    .Toastify__toast--warning {\n      border-radius: 15px;\n      text-align: center;\n    }\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n`\n","import {createMuiTheme} from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\n\nexport const MuiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#7a682a',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: '#ea7d7d',\n      light: 'rgb(192, 107, 82)'\n    },\n    error: {main: red[400], dark: red[700]}\n  },\n  breakpoints: {\n    keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n    values: {xs: 375, sm: 600, md: 768, lg: 1024, xl: 1440}\n  }\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {ThemeProvider} from 'styled-components'\nimport {ToastContainer, Flip} from 'react-toastify'\nimport {ThemeProvider as MuiProvider} from '@material-ui/styles'\n\nimport App from './app'\nimport store from './store'\nimport {MuiTheme, StyledTheme, GlobalStyled} from './styles/themes'\nimport * as serviceWorker from './services/serviceWorker'\nimport './styles/scss/index.scss'\n\nrender(\n  <Provider store={store}>\n    <ThemeProvider theme={StyledTheme}>\n      <MuiProvider theme={MuiTheme}>\n        <App />\n      </MuiProvider>\n    </ThemeProvider>\n    <GlobalStyled />\n    <ToastContainer newestOnTop hideProgressBar autoClose={3000} transition={Flip} />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}